<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>qliu&#39;s blog</title>
  
  <subtitle>二货潜不学习</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-13T05:10:39.564Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>不学生物的二货潜</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DNA Methylation Toward Crop Disease Resistance Improvement</title>
    <link href="http://yoursite.com/2019/10/13/DNA-Methylation-Toward-Crop-Disease-Resistance-Improvement/"/>
    <id>http://yoursite.com/2019/10/13/DNA-Methylation-Toward-Crop-Disease-Resistance-Improvement/</id>
    <published>2019-10-13T05:07:46.000Z</published>
    <updated>2019-10-13T05:10:39.564Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DNA-Methylation-Toward-Crop-Disease-Resistance-Improvement"><a href="#DNA-Methylation-Toward-Crop-Disease-Resistance-Improvement" class="headerlink" title="DNA Methylation: Toward Crop Disease Resistance Improvement"></a><a href="https://www.sciencedirect.com/science/article/pii/S1360138519302201#bb0615" target="_blank" rel="noopener">DNA Methylation: Toward Crop Disease Resistance Improvement</a></h1><h1 id="DNA-甲基化：提高作物抗病性"><a href="#DNA-甲基化：提高作物抗病性" class="headerlink" title="DNA 甲基化：提高作物抗病性"></a><strong>DNA 甲基化：提高作物抗病性</strong></h1><p>​    作物疾病和气候变化是对全球作物产量的主要威胁。<strong>DNA 甲基化</strong>是一种表观遗传标记，参与植物的各种生物学过程，包括<strong>发育、逆境适应和基因组进化</strong>。通过提供新的变异来源，<strong>DNA甲基化</strong>为科学家和育种家在<strong>增强抗病性</strong>带来了新的方向。在这里，我们讨论<strong>病原体</strong>诱导的<strong>DNA甲基化修饰</strong>对<strong>宿主转录组重编程</strong>和<strong>基因组稳定性</strong>的影响，作为植物防御机制的一部分。我们还强调了对<strong>DNA甲基化</strong>在<strong>植物病原体相互作用</strong>中的整个作用知识的 <code>gap</code> 。这将最终帮助育种家<strong>提高抗性，减少产量损失</strong>。</p><p><strong><code>Highlights（亮点）</code></strong>  </p><ul><li><p>多样性是由<strong>遗传和表观遗传变异</strong>形成的。与<strong>遗传多样性</strong>不同，<strong>表观遗传变异</strong>（ 例如 DNA甲基化/去甲基化 ）强烈依赖于并受环境因素驱动。最近许多研究表明，由于<strong>病原体的感染</strong>，植物的 DNA 甲基化发生改变，从而<strong>调节防御反应和提高抗性</strong>。</p></li><li><p>通过 DNA 去甲基化，植物重对转录组进行重编程，并以一种精确和有针对性的方式管理它们的基因组稳定性，以最大限度地提高它们应对动态环境变化的能力。</p></li><li><p>环境扰动（ 如<strong>生物和非生物胁迫</strong>）导致 DNA 甲基化状态的任何变化都可能导致新的可遗传表型，并拓宽遗传和表型变异的来源，这对于自然选择和人工选择都是必需的。</p></li></ul><h2 id="植物病害与表观遗传学"><a href="#植物病害与表观遗传学" class="headerlink" title="植物病害与表观遗传学"></a>植物病害与表观遗传学</h2><p>​    粮食安全、气候变化和人口增长已成为全球性重大问题。估计表明，到 2050 年，世界人口将达到近 100 亿，2006 年可获得的作物卡路里与 2050 年预计的卡路里需求之间的粮食缺口为 70%。农业生产持续平均每年增长 4400 万吨，持续 40 年，是满足这一需求的关键。</p><p>​    最近，<strong>表观遗传变化</strong>也被证明在诱导表型多样性中起着重要作用，包括通过<strong>控制防御基因的表达水平</strong>来诱导植物的抗性反应。<strong>表观遗传学</strong>是指研究不依赖于 DNA 序列的基因功能的有丝分裂和减数分裂可遗传变化。表观遗传学改变包括 <strong>DNA 甲基化和去甲基化，染色质重塑和组蛋白修饰</strong>。<a href="https://www.sciencedirect.com/science/article/pii/S0959437X00000617" target="_blank" rel="noopener">DNA甲基化是真核生物中一种重要而常见的表观遗传修饰</a> ( <code>2000 年</code>), 并参与各种生物过程，包括<a href="https://onlinelibrary.wiley.com/doi/full/10.1002/cbf.3183" target="_blank" rel="noopener">植物对逆境条件的适应机制</a> ( <code>2016 年综述</code> )等。在这篇综述中，我们强调了 DNA 甲基化在植物病原体相互作用中的重要性，并提高了对该领域当前知识 <code>gap</code> 的认识</p><h2 id="植物防御机制和-DNA-甲基化"><a href="#植物防御机制和-DNA-甲基化" class="headerlink" title="植物防御机制和 DNA 甲基化"></a>植物防御机制和 DNA 甲基化</h2><p>​    植物抵抗病原体的能力依赖于防御基因的调控，包括植物防御机制第一层的基因，这些基因是通过表面宿主蛋白受体识别病原体/微生物诱导子、病原体相关分子模式 ( <strong>PAMPs: pathogen-associated molecular pattern</strong> ) 或微生物相关分子模式 ( <strong>MAMPs: microbe-associated molecular pattern</strong> ) 而启动的。这些基因刺激 <strong>PAMP</strong> 触发免疫 ( <strong>PTI: PAMP-triggered immunity</strong> ) 或第二层防御机制中的相关基因，称为效应器触发免疫 ( <strong>ETI: effector-triggered immunity</strong> ) 。<strong>ETI</strong> 是一种抗性基因，其中抗病蛋白和特定病原体毒力 ( <strong>Avr</strong> ) 蛋白之间的相互作用。核苷酸结合位点-亮氨酸丰富重复 (<strong>NLR: The nucleotide-binding site–leucine rich repeat</strong>) 蛋白是最已知的对植物抗病性有重大影响的抗性蛋白。这些基因在数量和分布上的表达模式和进化是植物胁迫诱导反应的关键因素。</p><ul><li><a href>植物免疫系统综述</a> ( <code>2006 目前将近万引用率</code> )</li><li><strong>NLR 蛋白</strong></li></ul><hr><p>​    <a href="https://onlinelibrary.wiley.com/doi/abs/10.1002/(SICI)1521-1878(199905)21:5%3C402::AID-BIES7%3E3.0.CO;2-B" target="_blank" rel="noopener">DNA甲基化</a> 是指在DNA的第五位胞嘧啶碱基上加一个甲基，形成 5-甲基胞嘧啶。植物中，在<a href="https://www.nature.com/articles/nature05917" target="_blank" rel="noopener">对称 <strong>CG</strong> 和 <strong>CHG</strong> 和不对称 <strong>CHH</strong> </a>( 其中 <code>H = A，C或T</code> ) 的背景下观察到胞嘧啶碱基的甲基化，DNA 甲基化主要包括 CG、CHG、CHH 三种类型的甲基化。在几种植物中都观察到了这种模式：</p><ul><li><a href="https://www.nature.com/articles/nature06745" target="_blank" rel="noopener">拟南芥</a>：<strong>CG: 24%, CHG: 6.7%, CHH: 1.7%</strong> ( 2008 年 )</li><li><a href="https://www.pnas.org/content/112/44/13729.short" target="_blank" rel="noopener">木薯 cassava (<em>Manihot esculenta</em>)</a> ：<strong>CG: 58.7%, CHG: 39.5%, CHH: 3.5%</strong> （ 2015 年 ）</li><li><a href>大豆 soybean (<em>Glycine max</em>)</a>：<strong>CG: 63%, CHG: 44%, CHH: 5.9%</strong> ( 2013年 )</li><li><a href>玉米 maize (<em>Zea mays</em>) </a>：<strong>CG: 65%, CHG: 50%, CHH: 5%</strong> ( 2013 年 )</li><li><a href="https://bmcgenomics.biomedcentral.com/articles/10.1186/1471-2164-13-300" target="_blank" rel="noopener">水稻 rice (<em>Oryza sativa</em>)</a>：<strong>CG: 54.7%, CHG: 37.3%, CHH: 12%</strong> ( 2012 年 )</li></ul><p>​    上述研究还表明，基因 Body 甲基化在 CG 中高度甲基化；而转座元件 ( TEs : 即一种可移动遗传元件 ) 在所有三种序列环境中都高度甲基化。</p><p>​    在植物中 DNA 甲基化涉及<a href="https://onlinelibrary.wiley.com/doi/full/10.1002/cbf.3183" target="_blank" rel="noopener">三个过程</a>：从头 ( <em>de novo</em> ) DNA 甲基化、甲基化的维持、DNA 去甲基化。在植物中，从头 DNA 甲基化由 <a href="https://www.nature.com/articles/nrg1601" target="_blank" rel="noopener">DRM2</a> ( <code>Domains Rearranged Methyltranferase</code>  哺乳动物中 DNA 甲基化转移酶 <strong>Dnmt3</strong> 的同系物 )。从头甲基化通过小RNA发生，称为 <code>RdDM</code> 途经 ( <strong>RNA-directed DNA methylation</strong> )，需要两种植物<a href="https://www.nature.com/articles/nrg2719" target="_blank" rel="noopener">特异性RNA聚合酶</a>，<strong>Pol IV</strong> 和 <strong>Pol V</strong>。包括 siRNA 和 miRNA 在内的小 RNA 的作用已被证明是一系列生物学过程，包括<a href="https://www.sciencedirect.com/science/article/pii/S1360138514000296" target="_blank" rel="noopener">基因表达调控和转座子沉默</a>。例如，miRNA 已显示参与调节番茄中 NLR的表达，<a href="http://www.plantcell.org/content/24/3/859.short" target="_blank" rel="noopener">从而可调节防御反应</a>。还发现多种<a href="http://www.plantphysiol.org/content/164/2/1077.short" target="_blank" rel="noopener">水稻 miRNA 通过上调防御相关基因</a>而参与了对米曲霉 ( <em>M. oryzae</em> ) 的抗性增强。在拟南芥中，<a href="https://science.sciencemag.org/content/299/5607/716" target="_blank" rel="noopener"><strong>AGO4</strong></a>（ <strong><code>Argonaute 4</code> ：siRNA 介导的沉默中指导 DNA 和组蛋白甲基化的主要成分之一</strong> ）中的<a href="http://www.plantcell.org/content/19/11/3778.short" target="_blank" rel="noopener">突变导致对细菌性病原体丁香假单胞菌 ( <em>Pseudomonas syringae</em> ) 的敏感性增加</a>。 拟南芥 <strong>RdDM</strong> 突变体，包括<strong><em>nrpe1</em></strong> ( Pol V 的最大亚基 )，<strong><em>nrpd2</em></strong> ( Pol V 的第二大亚基 )，<strong><em>ago4</em></strong>，<strong><em>drd1</em></strong>，<strong><em>rdr2</em></strong> ( RNA 依赖性 RNA 聚合酶 2 ) 对病原体感染的修饰反应，证实<a href="https://journals.plos.org/plosgenetics/article?id=10.1371/journal.pgen.1002434" target="_blank" rel="noopener"><strong>RdDM</strong> 在植物免疫系统中起关键作用</a> </p><p>​    在植物中，最丰富的一类小 RNA 来源于 TEs 和 DNA 重复序列，<a href="https://www.nature.com/articles/nplants201616" target="_blank" rel="noopener">含有 TEs 的基因更容易通过 RdDM 途径进行调节</a>。non-TE 相关基因的表达也可能受到 RdDM 途径的影响。在大豆中，被 <strong>24-nt</strong> 的小 RNA 靶向的 90 种 <strong>NLR</strong> 基因中的大多数被甲基化。这些结果表明，<a href="https://academic.oup.com/dnaresearch/article/25/2/161/4633661" target="_blank" rel="noopener">RdDM 途径可以独立于 <strong>TEs</strong> 靶向 <strong>NLR 基因</strong>，并调节 <strong>NLRs</strong> 的表达水平和随后的耐药反应</a>。在<strong>病原体压力</strong> 下，<strong>NLR</strong>  的进一步调节机制是通过 <strong>WRKY</strong> 转录因子，其表达水平受到 RdDM途径的强烈影响。<a href="https://www.nature.com/articles/nplants201616" target="_blank" rel="noopener">水稻中已经报道了这种调节机制的一个例子</a> ( 图一 )。</p><p><img src="https://ars.els-cdn.com/content/image/1-s2.0-S1360138519302201-gr1.jpg" alt> </p><blockquote><p>图1.病原体压力下植物的DNA甲基化调控</p><p>在病原体攻击过程中，通过 RdDM t途经引起的高甲基化和 <strong>ROS1</strong>（ <code>Repressor of Silencing 1</code> ）介导的低甲基化可调节防御基因的表达，例如核苷酸结合位点-富含亮氨酸的重复序列（ <strong>NLR</strong> ），并调节转座子活性。转座子活性的变化也会影响防御基因的表达。<strong>ROS1</strong> 的表达也可以通过 <strong>RdDM</strong> 途径调节。</p></blockquote><p>​    为了平衡基因组的甲基化水平并保持基因表达，植物使用 DNA 去甲基酶去除<strong>5-甲基胞嘧啶</strong>，并用<strong>未甲基化的胞嘧啶</strong>取代它。在拟南芥中有四种 DNA 去甲基酶：<strong>Demeter (DME), Repressor of Silencing 1 (ROS1), Demeter-Like 2 (DML2) 和 DML3</strong>。然而 <a href="https://www.frontiersin.org/articles/10.3389/fpls.2017.01449/full" target="_blank" rel="noopener">*<em>DML2 和 DML3 *</em>的生物学功能并不是很清楚</a>。已报道<strong>母系等位基因</strong>去甲基化和<strong>胚乳</strong>中的<strong>基因印迹</strong>需要  <a href="https://www.pnas.org/content/108/19/8042.short" target="_blank" rel="noopener"><strong>DME</strong></a>，<a href="https://www.sciencedirect.com/science/article/pii/S0092867402011339" target="_blank" rel="noopener"><strong>ROS1</strong> 与<strong>植物发育调节以及生物和非生物胁迫响应</strong>有关</a>。用 <a href="https://www.pnas.org/content/110/6/2389.short" target="_blank" rel="noopener">flg22 (flagellin-derived peptide) 处理的拟南芥 DNA 去甲基酶缺失突变体 <em>ros1</em> 显示 flg22 的繁殖增强</a>，而 flg22 通过超敏反应在处理过的野生型植物中防止传播。有趣的是，据报道，低甲基化的 <strong><em>nrpe1</em></strong> 突变体和高甲基化的 <strong><em>ros1</em></strong> 突变体通过调节防御相关基因的表达来拮抗拟南芥对 <strong><em>Hyaloperonospora arabidopsidis</em></strong> 的<a href="https://onlinelibrary.wiley.com/doi/full/10.1111/tpj.13252" target="_blank" rel="noopener">基础抗性</a>。此外，ROS1 的表达对 RdDM 活性有反应。减少的DNA甲基化抑制 ROS1 表达，而增强的 DNA 甲基化则促进 ROS1 表达。这种调节机制进一步表明了 ROS1 在植物防御反应中的潜在作用 ( <a href="https://www.pnas.org/content/109/28/11425.short" target="_blank" rel="noopener">1</a>  <a href="https://www.annualreviews.org/doi/full/10.1146/annurev-phyto-080615-100308" target="_blank" rel="noopener">2</a> )。</p><p>​    DNA 甲基化的维持取决于序列。<strong>MET1 ( Methyltransferase1 ) 维持 CG 甲基化，CMT3 ( Chromomethylase3  ) 和 CMT2 维持 CHG 甲基化，CMT2 或者 RdDM 途经维持 CHH 甲基化</strong>。缺乏 CG（ <strong><em>met1</em></strong> 突变体），CG 和 CHH（ <strong><em>met1 nrdp2</em></strong>突变体）以及CHG和CHH（ <strong><em>drm1 drm2 cmt3</em></strong> 的 <strong><em>ddc</em></strong> 三突变体）的甲基化维持能力的拟南芥突变体显示出对丁香假单胞菌的抗性增强 ( <a href="https://www.pnas.org/content/110/6/2389.short" target="_blank" rel="noopener">1</a> <a href="https://www.pnas.org/content/109/32/E2183.short" target="_blank" rel="noopener">2</a> )。<a href="http://www.plantphysiol.org/content/158/2/844.short" target="_blank" rel="noopener"><strong><em>ddc</em></strong> 突变体还显示出对引起霜霉病的病原体 <strong><em>H. arabidopsidis</em></strong> 的抵抗力增强</a>。</p><p>​    可用于研究整个基因组的DNA甲基化状态的各种方法的迅速发展，使人们对DNA甲基化在植物的各种生物过程（包括植物病原体相互作用）中的作用有了深入的了解。这些包括 <a href="https://academic.oup.com/nar/article/22/15/2990/1087317" target="_blank" rel="noopener"><strong>WGBS</strong></a> ( 全基因组亚硫酸氢盐测序 )、<strong>epi-restriction-site associated DNA sequencing</strong>（ <strong>epi-限制性酶切位点相关的 DNA 测序</strong> ）、<strong>methylC-capture sequencing</strong> ( 甲基化 C 捕获测序 )、<strong>methylated DNA immunoprecipitation sequencing</strong> ( DNA 甲基化免疫沉淀测序 )、<strong>combined bisulfite restriction analysis</strong> ( 结合亚硫酸氢盐限制分析 )、<strong>SeqCap Epi</strong>、<strong>amplification of intermethylated sites</strong>。DNA 甲基化作为植物病原体诱导的免疫系统的一部分的最新研究，使用了这些不同的方法，总结如下：</p><blockquote><p>表1：<a href="https://www.sciencedirect.com/science/article/pii/S1360138519302201#t0005" target="_blank" rel="noopener">建议点链接查看</a></p><p>缩写：</p><p>AFLP，扩增的片段长度多态性；</p><p>COBRA，亚硫酸氢盐结合限制分析；</p><p>HPLC，高效液相色谱法；</p><p>LRR，富含亮氨酸的重复序列；</p><p>MSAP，甲基化敏感的扩增多态性；</p><p>MeDIP-seq，甲基化的 DNA 免疫沉淀测序。</p></blockquote><p><img src="https://raw.githubusercontent.com/qliugithub/PicGo/master/biao1_1.png" alt></p><p><img src="https://raw.githubusercontent.com/qliugithub/PicGo/master/biao1_2.png" alt></p><p><img src="https://raw.githubusercontent.com/qliugithub/PicGo/master/biao1_3.png" alt></p><p>​    显然，在植物中，DNA 甲基化在病原体压力下是高度动态变化的，并且可以显著影响防御响应。接下来将套路 DNA 甲基化对病原体相互作用的影响，包括转录组重编程和基因组稳定性的变化。这为研究植物病原体相互作用的当前遗传研究进展提供了新的方向，通过将DNA 甲基化变异纳入当前的育种计划中为作物育种铺平了新的道路 ( 图二 )。</p><blockquote><p>图二：关键图。病原体诱导的 DNA 甲基化变化通过转录组重编程和基因组稳定性变化对诱导表型和遗传多样性的影响。</p></blockquote><p><img src="https://ars.els-cdn.com/content/image/1-s2.0-S1360138519302201-gr2.jpg" alt></p><hr><h2 id="DNA-甲基化：转录组重编程的刺激。"><a href="#DNA-甲基化：转录组重编程的刺激。" class="headerlink" title="DNA 甲基化：转录组重编程的刺激。"></a>DNA 甲基化：转录组重编程的刺激。</h2><p>​    植物适应胁迫条件的能力取决于转录组的重编程，并且 DNA 甲基化已显示在不同生长阶段和胁迫条件下在转录组修饰中起关键作用（ <a href="https://link.springer.com/chapter/10.1007/978-81-322-0807-5_17" target="_blank" rel="noopener">1</a>、<a href="https://link.springer.com/article/10.1007/s00438-004-1018-4" target="_blank" rel="noopener">2</a>、<a href="https://link.springer.com/article/10.1007/s00438-007-0209-1" target="_blank" rel="noopener">3</a>、<a href="https://academic.oup.com/jxb/article/62/6/1951/595672" target="_blank" rel="noopener">4</a> ）。DNA 甲基化与基因表达之间的相关性非常复杂，并且取决于各种因素，包括组织类型，转座子活性，序列背景和基因组区域，例如<a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0110357" target="_blank" rel="noopener">基因 Body</a> 和启动子。在以下小节中，我们讨论病原体压力如何通过改变启动子，基因 Body 和 TE 中的 DNA 甲基化状态来影响基因表达。</p><hr><h3 id="启动子甲基化"><a href="#启动子甲基化" class="headerlink" title="启动子甲基化"></a>启动子甲基化</h3><p>​    有许多研究表明，启动子区域的甲基化调节基因的表达，而基因启动子区域的甲基化与基因表达水平之间呈负相关关系（ <a href="https://www.pnas.org/content/112/44/13729.short" target="_blank" rel="noopener">1</a>、<a href="https://www.sciencedirect.com/science/article/pii/S009286740601018X" target="_blank" rel="noopener">2</a>、<a href="http://genesdev.cshlp.org/content/15/5/591.short" target="_blank" rel="noopener">3</a>、<a href="https://www.nature.com/articles/nrg3230" target="_blank" rel="noopener">4</a> ）。疾病相关基因（ 例如 <strong>NLR</strong> 基因 ）启动子中的病原体诱导的 DNA 甲基化低甲基化可以改变其表达水平并诱导防御能力。例如，<strong><em>Xa21G</em></strong> 的启动子区在水稻突变体中，稻瘟病防御基因被低甲基化，而在野生型植物中被高甲基化。随后，在突变植物中观察到高水平的基因表达和对病原体的防御表型，而在野生型中未观察到 ( <a href="https://academic.oup.com/aob/article/100/2/205/104139" target="_blank" rel="noopener">1</a> )。与生物胁迫一样，由于非生物胁迫（ 例如盐度和干旱 ）而启动子低甲基化会导致非生物胁迫响应基因的上调 （ <a href="https://link.springer.com/article/10.1007/s00438-007-0209-1" target="_blank" rel="noopener">1</a>、<a href="https://academic.oup.com/pcp/article/55/7/1354/2756439" target="_blank" rel="noopener">2</a>、<a href="https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-018-4484-5" target="_blank" rel="noopener">3</a> ）。</p><p>​    但是，启动子的低甲基化对于提高基因表达水平并非必要的。例如，发现稻瘟病抗性基因<strong><em>Pib</em></strong> 的启动子被高度甲基化，尽管它在被 <strong><em>Magnaporthe grisea</em></strong> 感染的植物中高表达。有趣的是，<strong><em>Pib</em></strong> 启动子的部分去甲基化会降低其表达，并因此损害抗性表型（ <a href="https://onlinelibrary.wiley.com/doi/full/10.1111/j.1744-7909.2011.01070.x" target="_blank" rel="noopener">1</a> ）。</p><p>​    在胁迫条件下，<strong>低甲基化和高甲基化对植物都是有益的，整体的高甲基化会减少转录，从而减少细胞的能量消耗，而减少能量消耗是在病原体侵袭或非生物胁迫时所必需的</strong>。相比之下，抗性基因的低甲基化会增强其表达，从而对环境因素产生快速适应性的反应（ <a href="https://link.springer.com/chapter/10.1007/978-81-322-0807-5_17" target="_blank" rel="noopener">1</a> ）。为了最大程度地利用 DNA 甲基化提高抗病性，重要的是要了解植物针对病原体采用哪种策略，低甲基化还是高甲基化。</p><hr><h3 id="基因-Body-甲基化"><a href="#基因-Body-甲基化" class="headerlink" title="基因 Body 甲基化"></a>基因 Body 甲基化</h3><p>​    与<strong>启动子甲基化</strong>在基因表达中的作用相反，<strong>基因 Body 甲基化</strong>在基因表达修饰中的作用不太清楚。通常，在植物和哺乳动物中，在其<strong>转录/编码区</strong>具有高甲基化水平的基因与持续的高水平表达成正比（ <a href="https://www.pnas.org/content/112/44/13729.short" target="_blank" rel="noopener">1</a>、<a href="https://www.sciencedirect.com/science/article/pii/S009286740601018X" target="_blank" rel="noopener">2</a>、<a href="http://genesdev.cshlp.org/content/15/5/591.short" target="_blank" rel="noopener">3</a>、<a href="https://www.nature.com/articles/nrg3230" target="_blank" rel="noopener">4</a> ）。<strong>全基因组分析拟南芥 DNA 甲基化显示，中等转录的基因最有可能被甲基化，而表达水平最低或最高的基因最不可能被甲基化</strong> （ <a href="https://www.nature.com/articles/nature05917" target="_blank" rel="noopener">1</a>、<a href="https://www.nature.com/articles/ng1929" target="_blank" rel="noopener">2</a> ）。<strong>CG</strong> 背景下的基因 Body 甲基化已显示与许多植物物种（包括<a href="https://www.pnas.org/content/112/44/13729.short" target="_blank" rel="noopener">木薯</a>、普通豆、<a href="http://www.plantphysiol.org/content/168/4/1433.short" target="_blank" rel="noopener">大豆</a>、水稻 ( <a href="https://bmcgenomics.biomedcentral.com/articles/10.1186/1471-2164-13-300" target="_blank" rel="noopener">1</a> <a href="https://www.nature.com/articles/s41598-017-02860-4" target="_blank" rel="noopener">2</a> )、拟南芥 ( <a href="https://www.nature.com/articles/ng1929" target="_blank" rel="noopener">1</a> <a href="https://www.nature.com/articles/nature11968" target="_blank" rel="noopener">2</a> ) ）中的基因表达呈正相关。对水稻中 <strong><em>MET1</em></strong> 基因的无效突变体（ <strong><em>Osmet1-2</em></strong> ）的研究表明<strong>重复基因</strong>的表达不同，其中<strong>重复基因的高表达和低表达对基因 Body CG 甲基化损失的反应不同</strong> （ <a href="https://www.nature.com/articles/s41598-017-02860-4" target="_blank" rel="noopener">1</a> ）。相比之下，*<em>CHG 和 CHH *</em>环境中的基因 Body 甲基化与<a href="(https://bmcplantbiol.biomedcentral.com/articles/10.1186/1471-2229-11-94)">番茄</a>、<a href="https://bmcplantbiol.biomedcentral.com/articles/10.1186/1471-2229-12-51" target="_blank" rel="noopener">拟南芥</a>、<a href="https://academic.oup.com/dnaresearch/article/25/2/161/4633661" target="_blank" rel="noopener">普通豆</a>中的基因表达呈负相关。这些观察表明，基因 Body 甲基化的序列背景对于基因表达调节是重要的。</p><p>​    已经在几种植物基因组中鉴定并研究了防御基因（ <a href="http://www.plantcell.org/content/15/4/809.short" target="_blank" rel="noopener">1</a>、<a href="https://www.frontiersin.org/articles/10.3389/fpls.2016.01205/full" target="_blank" rel="noopener">2</a>、<a href="http://www.plantcell.org/content/15/4/809.short" target="_blank" rel="noopener">3</a>、<a href="https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-018-4521-4" target="_blank" rel="noopener">4</a>、<a href="https://link.springer.com/article/10.1007/s00438-014-0948-8" target="_blank" rel="noopener">5</a>、<a href="https://onlinelibrary.wiley.com/doi/full/10.1111/pbi.13015" target="_blank" rel="noopener">6</a> ）; 然而，他们的甲基化模式仍然知之甚少。最近的一项研究报道了常见的豆类 <strong>NLR</strong> 基因中异常的 Body 甲基化模式，其中一半的已鉴定 <strong>NLR</strong> 在所有三种情况下（ <strong>CG，CHG 和 CHH</strong> ）都被甲基化，类似于转座子的 DNA 甲基化模式，而典型的基因 Body 甲基化发生在 CG 环境中（ <a href="https://academic.oup.com/dnaresearch/article/25/2/161/4633661" target="_blank" rel="noopener">1</a> ）。这些异常模式可能表明防御基因中 DNA 甲基化的未知调控作用。为了更好地理解这些潜在的调控作用，需要在不同的植物物种中研究防御基因的甲基化模式。</p><p>​    除序列背景外，有证据表明基因 Body 甲基化对基因表达的影响取决于甲基化位点（ 即内含子，外显子及其边界 ）的位置。在拟南芥中，除<strong>内含子-外显子边界</strong>外，CHH 和 CHG 甲基化基本上被排除在基因 Body 内 ( <a href="https://www.nature.com/articles/ng1929" target="_blank" rel="noopener">1</a> )。在玉米中也观察到<strong>内含子-外显子边界</strong>处的 CHH 和CHG 甲基化，从而得出这样的假设：<strong>该甲基化模式通过抑制 RNA 剪接在替代剪接事件中具有潜在作用</strong>（ <a href="https://genome.cshlp.org/content/23/10/1651.short" target="_blank" rel="noopener">1</a> ）。<strong>内含子，外显子及其边界中 DNA 甲基化</strong>的不同模式可以控制剪接事件，通过产生新的功能或功能失调的基因转录本，甚至沉默基因，导致表型多样性增加。</p><hr><h3 id="转座子甲基化"><a href="#转座子甲基化" class="headerlink" title="转座子甲基化"></a>转座子甲基化</h3><p>​    TE 通过各种依赖 TE 激活的机制调节基因表达，而 TE 激活主要由其 DNA 甲基化状态控制（ <a href="https://www.sciencedirect.com/science/article/pii/S0168952597011815" target="_blank" rel="noopener">1</a> ）。生物或非生物胁迫下导致的全基因组低甲基化可以激活转座子并增加其在防御相关基因中的移动性，并随后调节其表达水平（ <a href="https://www.pnas.org/content/109/32/E2183.short" target="_blank" rel="noopener">1</a> 、<a href="http://genesdev.cshlp.org/content/15/5/591.short" target="_blank" rel="noopener">2</a>、<a href="https://www.nature.com/articles/443521a" target="_blank" rel="noopener">3</a>、<a href="https://www.karger.com/Article/Abstract/84957" target="_blank" rel="noopener">4</a>、<a href="https://www.nature.com/articles/srep30446" target="_blank" rel="noopener">5</a>、<a href="https://nph.onlinelibrary.wiley.com/doi/full/10.1111/nph.14688" target="_blank" rel="noopener">6</a>）。</p><p>​    <a href="https://www.sciencedirect.com/science/article/pii/S1874939916301006" target="_blank" rel="noopener">TE 调节基因表达的机制包括</a>：</p><ul><li>插入基因区域，改变表达水平或沉默基因，但是，基因通常可以耐受；</li><li>启动子的插入/缺失和新启动子的产生；</li><li>启动子中已经存在的 TE 的 DNA 甲基化状态的变化；</li><li>基因上游或下游插入 TE 改变其表达</li></ul><p>​    尽管在植物病原体的相互作用中对这四种机制的潜在过程尚不十分了解，但仍有一些实例可以证实宿主 TE 甲基化模式受病原体影响，并在调节防御机制中起重要作用（ <a href="https://www.pnas.org/content/110/6/2389.short" target="_blank" rel="noopener">1</a> 、<a href="https://www.pnas.org/content/109/32/E2183.short" target="_blank" rel="noopener">2</a>）。例如，拟南芥脱甲基酶三突变体 <strong><em>rdd</em></strong>（ <strong><em>ros1 dml2 dml3</em></strong> ）显示出对病原镰孢的敏感性增加，从而其基因组结构揭示了下调的胁迫响应基因的启动子富含甲基化的 TEs （ <a href="https://genomebiology.biomedcentral.com/articles/10.1186/s13059-014-0458-3" target="_blank" rel="noopener">1</a> ）。</p><p>​    水稻防御基因启动子中 TEs 的甲基化模式已显示可控制抗性表型和产量损失（ <a href="https://science.sciencemag.org/content/355/6328/962.abstract" target="_blank" rel="noopener">1</a> ）。诱导抗稻瘟病的广谱抗性的水稻 <strong><em>Pigm</em></strong> 基因座包含许多 <strong>NLR</strong>，其中 <strong>*PigmR</strong> 诱导持久和广谱抗性。由于其启动子中存在高度甲基化的 TE（ <strong>MITE1 和 MITE2</strong> ），因此 <strong><em>PigmS</em></strong> 在叶中不表达，但是在花粉中由于低甲基化而表达。有人提出 <strong>RdDM</strong> 途径介导了叶片 <strong><em>PigmS</em></strong> 启动子中<strong>MITE</strong> 嵌套的沉默。在花粉中不存在 <strong>PigmS</strong> 表达的情况下，尽管存在 <strong>PigmR</strong> 诱导的抗性，但仍存在产量损失。然而，<strong><em>PigmS</em></strong> 在花粉中的表达与 <strong><em>PigmR</em></strong> 的表达可导致广谱抗性，而不会降低产量。这些结果表明，<strong><em>PigmS</em></strong> 启动子中现有 TE 的甲基化状态以组织特异性方式控制其表达，并导致高抗性表型与较少产量损失之间的平衡。TE 的甲基化模式可能是同时调控各种基因的关键因素，因此，管理 TEs 的甲基化模式可能是育种计划中提高所需农艺性状表达并减少不良农艺性状影响的一种方法。</p><p>​    在水稻中，两个 <strong><em>WRKY45</em></strong> 等位基因编码一个转录因子，在抗 <strong><em>X.oryzae pv</em></strong> 中具有相反的功能，强调了 DNA 甲基化在调节基因功能中的重要性。两个等位基因之间的差异是 <strong>WRKY45-2</strong> 等位基因中存在两个 <strong>MITE</strong>，而 <strong>WRKY45-1</strong> 等位基因中不存在两个 <strong>MITE</strong>。这些 <strong>MITE</strong> 参与<strong>小RNA（ TE-siR815 ）</strong>的产生，<strong>TE-siR815</strong> 通过通过 <strong>RdDM</strong> 途径增强 <strong><em>ST1</em></strong> 内含子的 DNA 甲基化水平来抑制 <strong>NLR</strong> 基因 <strong><em>ST1</em></strong> 的表达，从而解释了 <strong><em>WRKY45-1</em></strong> 的负作用及其在调节抗病性中的作用（ <a href="https://www.nature.com/articles/nplants201616" target="_blank" rel="noopener">1</a> ）。</p><p>​    通过 TE 激活进行转录组重编程不仅限于生物胁迫。例如，在来自十字花科 <strong><em>ONSEN</em></strong> 的几种物种中，拟南芥属中的 <strong><em>LTR-copia</em></strong> 型反转录转座子被热应激激活并优先插入基因区附近。这意味着它参与了转录组和基因网络的调控，因此提高了植物适应逆境的能力（ <a href="https://www.sciencedirect.com/science/article/pii/S0378111913000759" target="_blank" rel="noopener">1</a>、<a href="https://journals.plos.org/plosgenetics/article?id=10.1371/journal.pgen.1004115" target="_blank" rel="noopener">2</a> ）。与野生型相比，<strong><em>ONSEN</em></strong> 转录本还显示在热处理的拟南芥 <strong><em>nrpd1</em></strong> 突变体中显着增加，该突变体在 <strong>RNA 聚合酶 IV</strong>和 <strong>siRNA **途径中受损。在应激的 *</strong>nrdp1<strong>* 突变体的子代中也观察到了新的*</strong>ONSEN<strong>* 插入的高频率，但在应激的野生型中却没有。这些观察结果表明，尽管环境压力触发了反转录转座子的活性，但 **siRNA</strong> 途径在限制其运动中起着至关重要的作用（ <a href="https://www.nature.com/articles/nature09861" target="_blank" rel="noopener">1</a> ）。</p><hr><h2 id="DNA-甲基化：基因组稳定性的力量"><a href="#DNA-甲基化：基因组稳定性的力量" class="headerlink" title="DNA 甲基化：基因组稳定性的力量"></a>DNA 甲基化：基因组稳定性的力量</h2><p>​    基因组稳定性取决于 TEs 的激活和基因组重排的自由性。活跃的移动元件和高频率的基因组重排导致基因组不稳定（ <a href="https://academic.oup.com/nar/article/35/5/1714/1266329" target="_blank" rel="noopener">1</a> ）。DNA 甲基化对基因组稳定性的影响不如转录组重编程中的作用那么快，并且在经过多年中响应各种环境刺激而对 DNA 甲基化模式进行的修饰会影响基因组进化过程。据推测，DNA 甲基化可作为对环境因素的快速适应性反应。例如，遗传（ <strong>SNP</strong> ）和甲基化（ <strong>单甲基化多态性</strong> ）变异被用于将来自广泛地理区域的小麦种质聚类，表明甲基化聚类到本地群体的聚类，而遗传变异聚类包括跨更广域的种质（ <a href="https://genome.cshlp.org/content/28/9/1319.short" target="_blank" rel="noopener">1</a> ）。这突出了环境因素对基因组 DNA 甲基化模式的影响，并因此突出了基因组对进化过程的脆弱性。</p><p>…</p><hr><h3 id="TE-甲基化"><a href="#TE-甲基化" class="headerlink" title="TE 甲基化"></a>TE 甲基化</h3><p>…</p><h3 id="基因组重排"><a href="#基因组重排" class="headerlink" title="基因组重排"></a>基因组重排</h3><p>…</p><h3 id="突变"><a href="#突变" class="headerlink" title="突变"></a>突变</h3><p>…</p><hr><h2 id="结束语和未来方向"><a href="#结束语和未来方向" class="headerlink" title="结束语和未来方向"></a>结束语和未来方向</h2><p>​    DNA 甲基化是植物适应的机制，是一个相对较新的变异来源。植物利用 DNA 甲基化来指导长期的生物过程（ 例如，基因组进化 ）和短期的过程（ 例如，对胁迫做出反应 ）。响应环境因素全基因组低甲基化和高甲基化，改变基因组稳定性并诱导进化过程，如突变和阶段性重排，从而导致稳定的遗传和表型多样性的产生。</p><p>​    在突如其来的应激下，DNA 甲基化的修饰通过调节应激反应基因的表达水平，作为一种快速的适应性反应。<strong>基因、TEs 和基因 Body 的上游和下游周围的低甲基化和高甲基化主要影响转录过程</strong>。总而言之，植物利用 DNA 甲基化修饰来针对动态环境扩展其表型和遗传多样性，以在需要时最大化能量消耗效率和抗性响应。</p><p>​    从育种者的角度来看，植物疾病管理和抗病性改善一直是育种计划的重中之重。但是，气候变化和人口增长带来了更多挑战。由于气候变化，胁迫和疾病流行的严重性和频率增加，这意味着单产损失预计将大大增加（ <a href="https://books.google.com/books?hl=en&lr=&id=gf3pAQAAQBAJ&oi=fnd&pg=PT18&ots=_7vVgoJ6ub&sig=8g6AFoVXDu7yfMCsu8EuoB527Ms#v=onepage&q&f=false" target="_blank" rel="noopener">1</a> ）。加之人口增长率和未来粮食需求的增长趋势，这给育种者施加了更大的压力，要求将产量损失降至最低。<strong>育种人员需要超越目前主要依靠遗传变异的育种策略，以最大程度地减少由于植物病害引起的产量损失。</strong> 通过扩大表型变异，DNA 甲基化可以解决育种方案中的现有局限性。</p><p>​    我们认为，DNA 甲基化在植物病原体相互作用中的作用值得进一步研究，以填补关键的知识空白，并使之在育种计划中提高抗性。</p><hr><blockquote><p>*<em>悬而未决的问题 *</em></p><ul><li>在不同的植物物种中，与防御相关的特定基因家族（ 例如 <strong>NLR</strong>  ）的 DNA 甲基化模式是否相似？防御相关基因的 DNA 甲基化模式是否更容易在病原体攻击下发生变化？</li><li>与防御相关的基因的哪些部分（ 例如启动子，基因体，外显子，特定结构域等 ）在病原体攻击下更容易发生变化？这些漏洞在不同植物之间是否相似？</li><li>尽管 DNA 甲基化证明自己是新的变异来源，但如何将其纳入育种过程并在其中使用呢？</li><li>在表观遗传学成功地应用于植物育种的情况下，作为消费者的人/社会对表观改良作物的反应如何？</li></ul></blockquote><ul><li><p><a href="https://science.sciencemag.org/content/299/5607/716" target="_blank" rel="noopener"><em>ARGONAUTE4</em> Control of Locus-Specific siRNA Accumulation and DNA and Histone Methylation</a> ( 2004 年 <strong>Daniel Zilberman,  Xiaofeng Cao, Steven E. Jacobsen</strong> <strong><code>Science</code></strong>)</p></li><li><p><a href="https://www.nature.com/articles/nrg1601" target="_blank" rel="noopener">Gardening the genome: DNA methylation in <em>Arabidopsis thaliana</em></a>  ( 2005 年综述 <code>Steven E. Jacobsen</code> 注意看网页版：<code>model 图后面又勘误校正</code>)</p></li><li><p><a href="https://www.nature.com/articles/nature05917" target="_blank" rel="noopener">Epigenetic inheritance in plants</a> ( <code>2007年 Steven E.Jacobsen 综述</code> )</p></li><li><p><a href="https://www.nature.com/articles/nrg2719" target="_blank" rel="noopener">Establishing, maintaining and modifying DNA methylation patterns in plants and animals</a> ( <code>2010 年 Steven E.Jacobsen 综述</code> )</p></li><li><p><a href="https://link.springer.com/chapter/10.1007/978-81-322-0807-5_17" target="_blank" rel="noopener">DNA Methylation-Associated Epigenetic Changes in Stress Tolerance of Plants</a> [ 2013 年 BOOK]</p></li><li><p><a href="https://www.sciencedirect.com/science/article/pii/S1360138514000296" target="_blank" rel="noopener">DNA methylation as a system of plant genomic immunity</a> ( 2014 年 <a href="https://www.sciencedirect.com/science/article/pii/S1360138514000296#!" target="_blank" rel="noopener">Daniel Zilberman</a> 综述)</p></li><li><p><a href="https://onlinelibrary.wiley.com/doi/full/10.1002/cbf.3183" target="_blank" rel="noopener">DNA methylation dynamics in plants and mammals: overview of regulation and dysregulation</a> ( 2016 年综述 )</p></li><li><p><a href="https://www.nature.com/articles/nplants201616" target="_blank" rel="noopener">Transposon-derived small RNA is responsible for modified function of <em>WRKY45</em> locus</a> ( 2016 年 王石平老师 )</p></li><li><p><a href="https://www.frontiersin.org/articles/10.3389/fpls.2017.01449/full" target="_blank" rel="noopener">DNA-Demethylase Regulated Genes Show Methylation-Independent Spatiotemporal Expression Patterns</a> ( 2017 年 ROS1 等去甲基化酶和时空表达 )</p></li><li><p><a href="https://www.sciencedirect.com/science/article/pii/S1874939916301006#aep-article-footnote-id3" target="_blank" rel="noopener">Transposable element influences on gene expression in plants</a> ( 2017 年 <a href="https://www.sciencedirect.com/science/article/pii/S1874939916301006#!" target="_blank" rel="noopener">Nathan M.Springer</a> 综述 )</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;DNA-Methylation-Toward-Crop-Disease-Resistance-Improvement&quot;&gt;&lt;a href=&quot;#DNA-Methylation-Toward-Crop-Disease-Resistance-Improvement&quot; cl
      
    
    </summary>
    
      <category term="文献" scheme="http://yoursite.com/categories/%E6%96%87%E7%8C%AE/"/>
    
    
      <category term="DNA 甲基化" scheme="http://yoursite.com/tags/DNA-%E7%94%B2%E5%9F%BA%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>TidyTuesday_week38_heatmap</title>
    <link href="http://yoursite.com/2019/09/21/TidyTuesday-week38-heatmap/"/>
    <id>http://yoursite.com/2019/09/21/TidyTuesday-week38-heatmap/</id>
    <published>2019-09-21T10:05:25.000Z</published>
    <updated>2019-09-21T10:07:08.918Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><h2 id="https-github-com-gkaramanis-tidytuesday-tree-master-week-38"><a href="#https-github-com-gkaramanis-tidytuesday-tree-master-week-38" class="headerlink" title="https://github.com/gkaramanis/tidytuesday/tree/master/week-38"></a><a href="https://github.com/gkaramanis/tidytuesday/tree/master/week-38" target="_blank" rel="noopener">https://github.com/gkaramanis/tidytuesday/tree/master/week-38</a></h2><p><img src="https://raw.githubusercontent.com/qliugithub/PicGo/master/TidyTuesday_week38_heatmap.png" alt></p><p>#######################################################################</p><h1 id="学习到的技能（需要掌握的函数）"><a href="#学习到的技能（需要掌握的函数）" class="headerlink" title="学习到的技能（需要掌握的函数）"></a>学习到的技能（<strong>需要掌握的函数</strong>）</h1><p>#######################################################################</p><ul><li><p><code>filter() + mutate() + group_by() + arrange() + drop_na()</code> </p></li><li><p><code>mutate()</code> 函数中的 <code>case_when</code> 来条件判断赋值，可以使用代码冗余复杂变得浅显易懂，也很方便进行修改</p></li><li><p><code>lag()</code> 函数表示取向量中的前一个数据</p></li><li><p><code>lead()</code> 函数表示取向量中的后一个数据</p><ul><li>最后记得先排序后操作，或者在函数中指定 <code>order_by = xx</code></li></ul></li><li><p><code>geom_segment()</code> 函数  </p></li><li><p><code>expand</code> 函数表示范围扩展常数矢量，用于在数据周围添加一些填充，以确保将其放置在距轴一定距离的位置。使用便捷函数 </p></li><li><p><code>expand_scale()</code> 函数来生成 <code>expand</code> 参数的值。默认值是将 <code>连续变量</code> 的比例尺各扩大 <strong>5％</strong>，将 <code>离散变量</code> 的比例尺各扩大 <strong>0.6</strong> 个单位。(<strong>翻译官方说明</strong>)</p><ul><li><code>expand_scale(mult = 0, add = 0)</code></li><li>一句话 <code>add</code> 表示图形距离画布左右两边的距离, <code>mult</code> 表示图形里画布上下两边的距离</li></ul></li><li><p><code>rescale()</code> 函数将数据范围归一化到 <strong>[0, 1]</strong></p></li><li><p><code>display.brewer.all()</code> 就可以看到对应取色方案</p></li><li><p>也可以在网站 <a href="https://gallantlab.github.io/colormaps.html" target="_blank" rel="noopener">Colormaps</a> 进行查看</p></li><li><p><code>labs()</code> 要善于利用此函数来加标题等注释</p></li><li><p><code>theme_void()</code> 去除所有内置主题</p></li><li><p><code>here</code> 包, 可以快速创建文件夹以及文件</p></li></ul><p>#######################################################################</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>#######################################################################</p><h1 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h1><h2 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">rm(list = ls())</span><br><span class="line"></span><br><span class="line">library(tidyverse)</span><br><span class="line">library(here)</span><br><span class="line">library(lemon)</span><br><span class="line">library(RColorBrewer)</span><br><span class="line">library(scales)</span><br><span class="line"></span><br><span class="line">park_visits &lt;- readr::read_csv(&quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-09-17/national_parks.csv&quot;)</span><br><span class="line"></span><br><span class="line"># 可以看到每一列的数据类型是什么样的。</span><br><span class="line"># 我们可以清楚看到 `year` 那一列是属于字符串类型，后面进行操作时候变为了 `numeric`</span><br><span class="line"># cols(</span><br><span class="line">#   year = col_character(),</span><br><span class="line">#   gnis_id = col_character(),</span><br><span class="line">#   geometry = col_character(),</span><br><span class="line">#   metadata = col_character(),</span><br><span class="line">#   number_of_records = col_double(),</span><br><span class="line">#   parkname = col_character(),</span><br><span class="line">#   region = col_character(),</span><br><span class="line">#   state = col_character(),</span><br><span class="line">#   unit_code = col_character(),</span><br><span class="line">#   unit_name = col_character(),</span><br><span class="line">#   unit_type = col_character(),</span><br><span class="line">#   visitors = col_double()</span><br><span class="line"># )</span><br></pre></td></tr></table></figure><h2 id="整理数据"><a href="#整理数据" class="headerlink" title="整理数据"></a>整理数据</h2><ul><li>这里充分结合来了 <code>filter() + mutate() + group_by() + arrange() + drop_na()</code> 函数一套清洗</li><li>还有一点需要强调的是要善于利用 <code>mutate()</code> 函数中的 <code>case_when</code> 来条件判断赋值，可以使用代码冗余复杂变得浅显易懂，也很方便进行修改</li><li>这里还需要注意的是利用了 <code>lag()</code> 函数，起到提取向量中的前一个值，后面会解释。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pv_ch &lt;- park_visits %&gt;% </span><br><span class="line">  distinct(year, unit_name, unit_type, visitors) %&gt;% # 去除重复行，类似base::uniq() 函数, 返回去除重复后的数据</span><br><span class="line">  filter(unit_type == &quot;National Park&quot; &amp; year != &quot;Total&quot;) %&gt;% # 筛选数据类型为 `National Park` 和年份为 `非 Total` 的行</span><br><span class="line">  mutate(year = as.numeric(year)) %&gt;% # 将 `year` 列由 `character` 变为 `numercic`</span><br><span class="line">  group_by(unit_name) %&gt;% # 按照 `unit_name` 列变量进行分组</span><br><span class="line">  arrange(year, .by_group = TRUE) %&gt;% # 将 `year` 年份按照分组分别进行排序</span><br><span class="line">  mutate(pct_change = (visitors/lag(visitors) - 1) * 100) %&gt;% # 新建一列 `pct_change` lag() 向量中的 `前一个`  值</span><br><span class="line">  filter(unit_name != &quot;Denali National Preserve&quot;) %&gt;% # 将 `Denali National Preserve` 行去除</span><br><span class="line">  drop_na() %&gt;% # 去除空值 `NA`</span><br><span class="line">  mutate( # 按照 `pct_change` 列的大小分组，三组</span><br><span class="line">    pct_change = case_when(</span><br><span class="line">      pct_change &gt; 100 ~ 200,</span><br><span class="line">      pct_change &lt; -100 ~ -200,</span><br><span class="line">      TRUE ~ pct_change # 表示除了上面的范围之内的范围都属于这个范畴</span><br><span class="line">    )</span><br><span class="line">  )</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>不得不插一句说明 <code>lag()</code> 和 <code>lead()</code> 函数</p></blockquote><ul><li>官方说明书：<a href="https://dplyr.tidyverse.org/reference/lead-lag.html" target="_blank" rel="noopener">https://dplyr.tidyverse.org/reference/lead-lag.html</a> </li><li><code>lag()</code> 函数表示取向量中的前一个数据</li><li><code>lead()</code> 函数表示取向量中的后一个数据</li><li>最后记得先排序后操作，或者在函数中指定 <code>order_by = xx</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">lag(1:10, 1)</span><br><span class="line"># [1] NA  1  2  3  4  5  6  7  8  9</span><br><span class="line"></span><br><span class="line">lag(1:10, 2)</span><br><span class="line"># [1] NA NA  1  2  3  4  5  6  7  8</span><br><span class="line"></span><br><span class="line">lead(1:10, 1)</span><br><span class="line">#&gt;  [1]  2  3  4  5  6  7  8  9 10 NA</span><br><span class="line"></span><br><span class="line">lead(1:10, 2)</span><br><span class="line">#&gt;  [1]  3  4  5  6  7  8  9 10 NA NA</span><br></pre></td></tr></table></figure><h1 id="可视化这部分思想很重要，"><a href="#可视化这部分思想很重要，" class="headerlink" title="可视化这部分思想很重要，"></a>可视化这部分思想很重要，</h1><blockquote><p><code>geom_segment()</code> 函数用来绘制区域，即指定四个点的位置, 详情见 <a href="https://zhuanlan.zhihu.com/p/37072513" target="_blank" rel="noopener">ggplot2 都有哪些使用不多但是却异常强大的图层函数</a> 一文，反正我看完是受益匪浅。<br><code>expand:</code> 范围扩展常数矢量，用于在数据周围添加一些填充，以确保将其放置在距轴一定距离的位置。使用便捷函数 </p></blockquote><ul><li>借用这里 <a href="https://stackoverflow.com/questions/44170871/how-does-ggplot-scale-continuous-expand-argument-work?rq=1" target="_blank" rel="noopener">How does ggplot scale_continuous expand argument work?</a> 的一个解释:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ggplot(mpg, aes(displ, hwy)) +</span><br><span class="line">    geom_point() +</span><br><span class="line">    scale_x_continuous(limits = c(1, 7), expand = c(0.5, 0))</span><br><span class="line"># right most position will be 7 + (7-1) * 0.5 = 10</span><br><span class="line"></span><br><span class="line">ggplot(mpg, aes(displ, hwy)) +</span><br><span class="line">    geom_point() +</span><br><span class="line">    scale_x_continuous(limits = c(1, 7), expand = c(0.5, 2))</span><br><span class="line"># right most position will be 7 + (7-1) * 0.5  + 2 = 12</span><br></pre></td></tr></table></figure><blockquote><p><code>expand_scale()</code> 来生成 <code>expand</code> 参数的值。默认值是将 <code>连续变量</code> 的比例尺各扩大 <strong>5％</strong>，将 <code>离散变量</code> 的比例尺各扩大 <strong>0.6</strong> 个单位。(<strong>翻译官方说明</strong>)</p></blockquote><ul><li><p><code>expand_scale(mult = 0, add = 0)</code></p></li><li><p><code>mult:</code> 范围扩展因子的向量。如果向量长度为 1，则刻度的下限和上限均会向外扩大。如果向量长度为 2，则下限由 <code>mult[1]</code> 扩展，上限由 <code>mult[2]</code> 扩展。<code>add = c(0,1)</code> 表示下边距离 x 轴零距离，距离顶端 1 倍长度。一般用于 y 轴，即 <code>scale_y_*</code>     </p></li><li><p><code>add:</code> 可加范围扩展常数的向量。如果向量长度为 1，则通过添加单位向外扩展刻度的上下限。如果向量长度为 2，则下限由 <code>add[1]</code> 扩展，上限由 <code>add[2]</code> 扩展。 <code>add = c(0,1)</code> 表示距离 y 轴零距离，距离右边 1 个单位。一般用于 x 轴，即 <code>scale_x_*</code>   </p></li><li><p>一句话 <code>add</code> 表示图形距离画布左右两边的距离, <code>mult</code> 表示图形里画布上下两边的距离</p></li></ul><blockquote><p><code>rescale()</code>   </p></blockquote><ul><li>将数据范围归一化到 <strong>[0, 1]</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rescale(1:10)</span><br><span class="line"># [1] 0.0000000 0.1111111 0.2222222 0.3333333 0.4444444 0.5555556 0.6666667 0.7777778 0.8888889 1.0000000</span><br><span class="line"></span><br><span class="line">rescale(1:11)</span><br><span class="line"># [1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>图中对应的颜色条</p></blockquote><ul><li><code>display.brewer.all()</code> 就可以看到对应取色方案</li><li>也可以在网站 <a href="https://gallantlab.github.io/colormaps.html" target="_blank" rel="noopener">Colormaps</a> 进行查看</li></ul><blockquote><p><code>labs()</code> 要善于利用此函数来加标题等注释</p></blockquote><blockquote><p><code>theme_void()</code> 去除所有内置主题，具体一眼见 <a href="https://dataxujing.github.io/ggplot2%E7%9A%84%E4%B8%BB%E9%A2%98%E6%A8%A1%E6%9D%BF/" target="_blank" rel="noopener">ggplot2 的主题模板</a>   </p></blockquote><blockquote><p>还得提一下的是 <code>here</code> 包, 可以快速创建文件夹以及文件</p></blockquote><ul><li><a href="https://github.com/jennybc/here_here" target="_blank" rel="noopener">说明书</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">here()</span><br><span class="line"># [1] &quot;F:/temp_desktop/2019-5&quot;</span><br><span class="line"></span><br><span class="line">here(&quot;one&quot;, &quot;two&quot;, &quot;awesome.txt&quot;)</span><br><span class="line"># [1] &quot;F:/temp_desktop/2019-5/one/two/awesome.txt&quot;</span><br><span class="line"># cat(readLines(here(&quot;one&quot;, &quot;two&quot;, &quot;awesome.txt&quot;)))</span><br><span class="line"># 这里需要管理员权限运行才行，由于我这里没有管理员运行，所以后面那部分保存图片是运行不了的</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">pv_ch %&gt;%</span><br><span class="line">  ggplot() +</span><br><span class="line">  geom_segment(aes(x = year, xend = year,</span><br><span class="line">                   y = 0, yend = 1, color = pct_change), size = 1) + # 绘制几何图形并填充颜色</span><br><span class="line">  scale_x_continuous(breaks = seq(1910, 2010, 20), # 指定 x 轴标签内容</span><br><span class="line">                     expand = expand_scale(add = c(5, 1))) + # 表示指定离左边的距离为 5, 离右边为 1，当为 c(0, 0) 时候会填充整个坐标轴画布</span><br><span class="line">  scale_y_continuous(expand = c(0.05, 0.25)) + # 表示将 y 轴变为 ymax + (ymax - ymin) * 0.05 + 0.25</span><br><span class="line">  facet_wrap(vars(unit_name), ncol = 3) + # 表示按照 `unit_name` 进行分面，变为三列。</span><br><span class="line">  # `scale_colour_gradientn` N种颜色之间的平滑颜色渐变</span><br><span class="line">  scale_colour_gradientn(limits = c(-200, 200), # 指定颜色填充的范围</span><br><span class="line">                         colors = brewer.pal(n = 7, name = &quot;RdYlGn&quot;), # 选取颜色，对应颜色注释见 `display.brewer.all()`</span><br><span class="line">                         values = rescale(c(-200, -100, -1, 0, 1, 100, 200)), # 对七个刻度进行归一化？，反正就是变成 [0, 1] </span><br><span class="line">                         labels = c(&quot;&quot;, &quot;-100%&quot;, &quot;0&quot;, &quot;100%&quot;, &quot;&quot;) # 对应的刻度尺进行标签注释</span><br><span class="line">  ) +</span><br><span class="line">  labs( # 标签注释，懒得解释</span><br><span class="line">    title = &quot;National Park Visits 1904–2016&quot;,</span><br><span class="line">    subtitle = &quot;Year-over-year percentage change&quot;,</span><br><span class="line">    caption = &quot;Source: dataisplural/data.world | Graphic: Georgios Karamanis&quot;</span><br><span class="line">  ) +</span><br><span class="line">  guides(color = guide_colorbar(</span><br><span class="line">    title.position = &quot;top&quot;,</span><br><span class="line">    label.position = &quot;top&quot;,</span><br><span class="line">    title = NULL,</span><br><span class="line">    barwidth = 20,</span><br><span class="line">    barheight = 0.5</span><br><span class="line">  )) +</span><br><span class="line">  theme_void(base_family = &quot;Times New Roman&quot;) +</span><br><span class="line">  theme(</span><br><span class="line">    legend.position = &quot;top&quot;,</span><br><span class="line">    legend.title = element_text(size = 20, color = &quot;grey20&quot;),</span><br><span class="line">    legend.margin = margin(0, 0, 20, 0),</span><br><span class="line">    plot.background = element_rect(fill = &quot;grey80&quot;, color = NA),</span><br><span class="line">    strip.background = element_rect(fill = &quot;grey80&quot;, color = NA),</span><br><span class="line">    strip.text = element_text(family = &quot;Times New Roman&quot;, color = &quot;grey30&quot;,</span><br><span class="line">                              hjust = 1, vjust = 1),</span><br><span class="line">    plot.title = element_text(size = 28, color = &quot;grey20&quot;, family = &quot;Times New Roman&quot;),</span><br><span class="line">    plot.subtitle = element_text(size = 20, color = &quot;grey20&quot;),</span><br><span class="line">    plot.caption = element_text(size = 8, color = &quot;grey30&quot;, margin = margin(20, 0, 0, 0)),</span><br><span class="line">    axis.text.x = element_text(family = &quot;Times New Roman&quot;, size = 7, color = &quot;grey40&quot;),</span><br><span class="line">    panel.grid.major.x = element_line(color = &quot;grey75&quot;),</span><br><span class="line">    plot.margin = margin(20, 20, 20, 20)</span><br><span class="line">  )  #本来有 +</span><br><span class="line">  </span><br><span class="line">  # save image</span><br><span class="line">#   ggsave(</span><br><span class="line">#     here::hcere(&quot;week-38&quot;, &quot;figures&quot;, &quot;temp&quot;, paste0(&quot;national-parks&quot;, format(Sys.time(), &quot;%Y%m%d_%H%M%S&quot;), # &quot;.png&quot;)),</span><br><span class="line">#     width = 18, height = 14, dpi = 320</span><br><span class="line">#   ) # 没有管理员运行 R ，所以我的不行，需要自行设置</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/qliugithub/PicGo/master/TidyTuesday_week38_heatmap.png" alt></p><h2 id="最后这个学了以后可以用来做什么呢？那就看大家自己的想法了。"><a href="#最后这个学了以后可以用来做什么呢？那就看大家自己的想法了。" class="headerlink" title="最后这个学了以后可以用来做什么呢？那就看大家自己的想法了。"></a>最后这个学了以后可以用来做什么呢？那就看大家自己的想法了。</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接&quot;&gt;&lt;/a&gt;参考链接&lt;/h1&gt;&lt;h2 id=&quot;https-github-com-gkaramanis-tidytuesday-tree-master-week-
      
    
    </summary>
    
      <category term="R 可视化" scheme="http://yoursite.com/categories/R-%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="可视化" scheme="http://yoursite.com/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>从一个图的实战来升华 R 语言 ggplot2 可视化技能.md</title>
    <link href="http://yoursite.com/2019/08/18/%E4%BB%8E%E4%B8%80%E4%B8%AA%E5%9B%BE%E7%9A%84%E5%AE%9E%E6%88%98%E6%9D%A5%E5%8D%87%E5%8D%8E-R-%E8%AF%AD%E8%A8%80-ggplot2-%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8A%80%E8%83%BD-md/"/>
    <id>http://yoursite.com/2019/08/18/从一个图的实战来升华-R-语言-ggplot2-可视化技能-md/</id>
    <published>2019-08-17T16:39:06.000Z</published>
    <updated>2019-08-17T16:47:27.587Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首先我是这是我日常逛-twitter-看到的，然后我又是一个搬运工，"><a href="#首先我是这是我日常逛-twitter-看到的，然后我又是一个搬运工，" class="headerlink" title="首先我是这是我日常逛 twitter 看到的，然后我又是一个搬运工，"></a>首先我是这是我日常逛 <strong>twitter</strong> 看到的，然后我又是一个搬运工，</h2><p><img src="https://upload-images.jianshu.io/upload_images/6223615-0610c655bb4f2b40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><ul><li><strong>放最前面的 <code>链接来源</code> ：</strong><ul><li><code>twitter 链接：</code> <a href="https://twitter.com/FournierJohanie/status/1161454327296339968" target="_blank" rel="noopener">https://twitter.com/FournierJohanie/status/1161454327296339968</a></li><li><code>代码链接：</code> <a href="https://johaniefournier.com/2019/08/13/tyt2019w33-bullet-graph-ou-graphique-a-puce/" target="_blank" rel="noopener">‘bullet graph’ ou graphique à puce</a></li></ul></li></ul><h2 id="涉及的函数"><a href="#涉及的函数" class="headerlink" title="涉及的函数"></a>涉及的函数</h2><ul><li><code>readr::read_csv</code></li><li><code>dplyr::glimpse</code>：适合用来查看函数的类信息，<strong>没接触过</strong></li><li><code>mutate() + filter() + select()</code>：简洁方便创建新的数据</li><li><code>geom_bar()</code>：柱状图</li><li><code>geom_segment</code>：自由化画直线条，想画哪里画哪里，这里用来填充图中的蓝色柱子</li><li><code>geom_errorbar()</code>：添加误差线，指定 y 值头到尾即可，这里用来绘制柱子上面的那一条横线</li><li><code>geom_point()</code>：点图，这里用来添加柱子上面的点</li><li><code>coord_flip()</code>：将 xy 轴互换</li><li><code>scale_y_continuous(breaks = seq(0, 80, 10), limits = c(0, 80))</code>：定义 y 轴刻度尺内容（ 即图中展示的 x 轴数字）</li><li><code>expand_limits()</code>：单向扩展阈值，也可以用来指定 xy 轴的范围，这里给后面要添加箭头留白（最上面的那部分空白就是这个函数引起的）</li><li><code>theme()</code>：画板控制，各种参数，具体见正文或者谷歌搜索关键字 <strong>ggplot2 theme</strong></li><li><code>labs()</code>：可以用来修改坐标轴以及标题、副标题等文本信息，这里通过 <strong><code>&quot; &quot;</code></strong> 将内容设置为空</li><li><code>geom_curve</code>：作用与 <code>geom_segment()</code> 相似，只是前者用来画直线，而这里用来绘制曲线，参数 <code>arrow</code> 为箭头</li><li><code>annotate()</code>：可以自由在画板上面添加文本注释信息，想在哪里添加就在哪里添加</li></ul><h2 id="成品图"><a href="#成品图" class="headerlink" title="成品图"></a>成品图</h2><p><img src="https://upload-images.jianshu.io/upload_images/6223615-e587175f52513a03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><blockquote><p><strong>好了接下来就是我复制粘贴的时间了。</strong></p></blockquote><h3 id="一、读取数据"><a href="#一、读取数据" class="headerlink" title="一、读取数据"></a>一、读取数据</h3><ul><li>作者这里为了方便我们大家重现或者说学习此代码（我猜的哈），就把数据放在 <code>github</code> 上面。</li><li>使用 <code>readr</code> 包的 <code>read_csv()</code> 函数读取文件 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">emperors &lt;- readr::read_csv(&quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-08-13/emperors.csv&quot;)</span><br><span class="line"></span><br><span class="line"># 运行后会出现的结果，我们可以很清楚的看到每一列的信息</span><br><span class="line">Parsed with column specification:</span><br><span class="line">cols(</span><br><span class="line">  index = col_double(),</span><br><span class="line">  name = col_character(),</span><br><span class="line">  name_full = col_character(),</span><br><span class="line">  birth = col_date(format = &quot;&quot;),</span><br><span class="line">  death = col_date(format = &quot;&quot;),</span><br><span class="line">  birth_cty = col_character(),</span><br><span class="line">  birth_prv = col_character(),</span><br><span class="line">  rise = col_character(),</span><br><span class="line">  reign_start = col_date(format = &quot;&quot;),</span><br><span class="line">  reign_end = col_date(format = &quot;&quot;),</span><br><span class="line">  cause = col_character(),</span><br><span class="line">  killer = col_character(),</span><br><span class="line">  dynasty = col_character(),</span><br><span class="line">  era = col_character(),</span><br><span class="line">  notes = col_character(),</span><br><span class="line">  verif_who = col_character()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">dplyr::glimpse(emperors, width = 100)</span><br><span class="line"># 说实话，刚开始看到这个我是不知道在做啥的，然后谷歌，发现这是让我们更直观的去了解我们自己的数据</span><br><span class="line"># width 参数控制输出总字符的宽度</span><br><span class="line"># 可以很清楚的看到有 16 列（变量） 和 68 行</span><br><span class="line">Observations: 68</span><br><span class="line">Variables: 16</span><br><span class="line">$ index       &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, ...</span><br><span class="line">$ name        &lt;chr&gt; &quot;Augustus&quot;, &quot;Tiberius&quot;, &quot;Caligula&quot;, &quot;Claudius&quot;, &quot;Nero&quot;, &quot;Galba&quot;, &quot;Otho&quot;, &quot;V...</span><br><span class="line">$ name_full   &lt;chr&gt; &quot;IMPERATOR CAESAR DIVI FILIVS AVGVSTVS&quot;, &quot;TIBERIVS CAESAR DIVI AVGVSTI FILI...</span><br><span class="line">$ birth       &lt;date&gt; 0062-09-23, 0041-11-16, 0012-08-31, 0009-08-01, 0037-12-15, 0002-12-24, 00...</span><br><span class="line">$ death       &lt;date&gt; 0014-08-19, 0037-03-16, 0041-01-24, 0054-10-13, 0068-06-09, 0069-01-15, 00...</span><br><span class="line">$ birth_cty   &lt;chr&gt; &quot;Rome&quot;, &quot;Rome&quot;, &quot;Antitum&quot;, &quot;Lugdunum&quot;, &quot;Antitum&quot;, &quot;Terracina&quot;, &quot;Terentinum&quot;...</span><br><span class="line">$ birth_prv   &lt;chr&gt; &quot;Italia&quot;, &quot;Italia&quot;, &quot;Italia&quot;, &quot;Gallia Lugdunensis&quot;, &quot;Italia&quot;, &quot;Italia&quot;, &quot;It...</span><br><span class="line">$ rise        &lt;chr&gt; &quot;Birthright&quot;, &quot;Birthright&quot;, &quot;Birthright&quot;, &quot;Birthright&quot;, &quot;Birthright&quot;, &quot;Seiz...</span><br><span class="line">$ reign_start &lt;date&gt; 0026-01-16, 0014-09-18, 0037-03-18, 0041-01-25, 0054-10-13, 0068-06-08, 00...</span><br><span class="line">$ reign_end   &lt;date&gt; 0014-08-19, 0037-03-16, 0041-01-24, 0054-10-13, 0068-06-09, 0069-01-15, 00...</span><br><span class="line">$ cause       &lt;chr&gt; &quot;Assassination&quot;, &quot;Assassination&quot;, &quot;Assassination&quot;, &quot;Assassination&quot;, &quot;Suicid...</span><br><span class="line">$ killer      &lt;chr&gt; &quot;Wife&quot;, &quot;Other Emperor&quot;, &quot;Senate&quot;, &quot;Wife&quot;, &quot;Senate&quot;, &quot;Other Emperor&quot;, &quot;Othe...</span><br><span class="line">$ dynasty     &lt;chr&gt; &quot;Julio-Claudian&quot;, &quot;Julio-Claudian&quot;, &quot;Julio-Claudian&quot;, &quot;Julio-Claudian&quot;, &quot;Ju...</span><br><span class="line">$ era         &lt;chr&gt; &quot;Principate&quot;, &quot;Principate&quot;, &quot;Principate&quot;, &quot;Principate&quot;, &quot;Principate&quot;, &quot;Prin...</span><br><span class="line">$ notes       &lt;chr&gt; &quot;birth, reign.start are BCE. Assign negative for correct ISO 8601 dates. Ca...</span><br><span class="line">$ verif_who   &lt;chr&gt; &quot;Reddit user zonination&quot;, &quot;Reddit user zonination&quot;, &quot;Reddit user zonination...</span><br><span class="line"></span><br><span class="line"># 再看看 head 函数， 可以看到横列是反的</span><br><span class="line">head(emperors)</span><br><span class="line"># A tibble: 6 x 16</span><br><span class="line">  index name  name_full birth      death      birth_cty birth_prv rise  reign_start reign_end  cause killer dynasty</span><br><span class="line">  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;date&gt;     &lt;date&gt;     &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt; &lt;date&gt;      &lt;date&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  </span><br><span class="line">1     1 Augu~ IMPERATO~ 0062-09-23 0014-08-19 Rome      Italia    Birt~ 0026-01-16  0014-08-19 Assa~ Wife   Julio-~</span><br><span class="line">2     2 Tibe~ TIBERIVS~ 0041-11-16 0037-03-16 Rome      Italia    Birt~ 0014-09-18  0037-03-16 Assa~ Other~ Julio-~</span><br><span class="line">3     3 Cali~ GAIVS IV~ 0012-08-31 0041-01-24 Antitum   Italia    Birt~ 0037-03-18  0041-01-24 Assa~ Senate Julio-~</span><br><span class="line">4     4 Clau~ TIBERIVS~ 0009-08-01 0054-10-13 Lugdunum  Gallia L~ Birt~ 0041-01-25  0054-10-13 Assa~ Wife   Julio-~</span><br><span class="line">5     5 Nero  NERO CLA~ 0037-12-15 0068-06-09 Antitum   Italia    Birt~ 0054-10-13  0068-06-09 Suic~ Senate Julio-~</span><br><span class="line">6     6 Galba SERVIVS ~ 0002-12-24 0069-01-15 Terracina Italia    Seiz~ 0068-06-08  0069-01-15 Assa~ Other~ Flavian</span><br><span class="line"># ... with 3 more variables: era &lt;chr&gt;, notes &lt;chr&gt;, verif_who &lt;chr&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="二、加载后续所要用的包"><a href="#二、加载后续所要用的包" class="headerlink" title="二、加载后续所要用的包"></a>二、加载后续所要用的包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">library(dplyr) </span><br><span class="line">library(tidyverse)</span><br><span class="line">library(lubridate)  # year() 函数要用</span><br><span class="line">library(ggplot2)</span><br></pre></td></tr></table></figure><h3 id="三、数据处理"><a href="#三、数据处理" class="headerlink" title="三、数据处理"></a>三、数据处理</h3><ul><li><p>插句题外话，这里的 <code>=</code> 对齐，可以用 <a href="https://thinkr-open.github.io/remedy/" target="_blank" rel="noopener">remedy</a> 实现，操作很骚，对于 <strong><code>代码整洁和 Markdown</code></strong> 特别方便</p></li><li><p>不断的利用 <code>mutate()</code> 函数创建新得变量，这里没啥解释的。</p></li><li><p><code>filter()</code>: 各种条件筛选</p></li><li><p><code>select()</code>：选择要输出的列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">data &lt;- emperors %&gt;%</span><br><span class="line">  mutate(annee_naiss = year(birth)) %&gt;%</span><br><span class="line">  mutate(annee_mort  = year(death)) %&gt;%</span><br><span class="line">  mutate(annee_deb   = year(reign_start)) %&gt;%</span><br><span class="line">  mutate(annee_fin   = year(reign_end)) %&gt;%</span><br><span class="line">  mutate(age_mort    = abs(annee_mort - annee_naiss)) %&gt;%</span><br><span class="line">  mutate(age_deb     = abs(annee_deb - annee_naiss)) %&gt;%</span><br><span class="line">  mutate(age_fin     = abs(annee_fin - annee_naiss)) %&gt;%</span><br><span class="line">  mutate(duree       = abs(age_fin - age_deb)) %&gt;%</span><br><span class="line">  mutate(remove      = ifelse(age_deb == age_mort, &apos;retirer&apos;, NA)) %&gt;%</span><br><span class="line">  filter(!age_mort %in% NA, !age_deb %in% NA, !age_fin %in% NA,</span><br><span class="line">         !age_mort %in% 4, !remove %in% &quot;retirer&quot;) %&gt;%</span><br><span class="line">  select(name, age_deb, age_fin, age_mort, duree)</span><br><span class="line"></span><br><span class="line"># 简单查看一下数据</span><br><span class="line">dplyr::glimpse(data, width = 100)</span><br><span class="line">Observations: 51</span><br><span class="line">Variables: 5</span><br><span class="line">$ name     &lt;chr&gt; &quot;Augustus&quot;, &quot;Caligula&quot;, &quot;Claudius&quot;, &quot;Nero&quot;, &quot;Galba&quot;, &quot;Vespasian&quot;, &quot;Titus&quot;, &quot;Do...</span><br><span class="line">$ age_deb  &lt;dbl&gt; 36, 25, 32, 17, 66, 60, 40, 30, 66, 45, 41, 52, 40, 31, 16, 48, 10, 20, 52, 15...</span><br><span class="line">$ age_fin  &lt;dbl&gt; 48, 29, 45, 31, 67, 70, 42, 45, 68, 64, 62, 75, 59, 39, 31, 66, 29, 22, 53, 19...</span><br><span class="line">$ age_mort &lt;dbl&gt; 48, 29, 45, 31, 67, 70, 42, 45, 68, 64, 62, 75, 59, 39, 31, 66, 29, 22, 53, 19...</span><br><span class="line">$ duree    &lt;dbl&gt; 12, 4, 13, 14, 1, 10, 2, 15, 2, 19, 21, 23, 19, 8, 15, 18, 19, 2, 1, 4, 13, 3,..</span><br><span class="line"></span><br><span class="line"># 还是比较喜欢 head 来展示</span><br><span class="line">head(data)</span><br><span class="line"># A tibble: 6 x 5</span><br><span class="line">  name      age_deb age_fin age_mort duree</span><br><span class="line">  &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;</span><br><span class="line">1 Augustus       36      48       48    12</span><br><span class="line">2 Caligula       25      29       29     4</span><br><span class="line">3 Claudius       32      45       45    13</span><br><span class="line">4 Nero           17      31       31    14</span><br><span class="line">5 Galba          66      67       67     1</span><br><span class="line">6 Vespasian      60      70       70    10</span><br></pre></td></tr></table></figure></li></ul><h3 id="四、画图（重头戏）"><a href="#四、画图（重头戏）" class="headerlink" title="四、画图（重头戏）"></a>四、画图（重头戏）</h3><blockquote><p>为了说明可视化不断修整过程，我将分开展示</p></blockquote><h4 id="1、-geom-bar-函数绘制-柱状图"><a href="#1、-geom-bar-函数绘制-柱状图" class="headerlink" title="1、 geom_bar() 函数绘制 柱状图"></a>1、 <code>geom_bar()</code> 函数绘制 柱状图</h4><ul><li><strong>1、</strong> 就是一个简单的柱状图<blockquote><p>参数说明：</p><ul><li><code>stat = identity</code> : 绘图函数 <code>stat</code> 的参数，用来对样本进行统计，默认为 <code>identity</code>，表示一个 x 对应一个 y，即横坐标 x 在数据中对应的 y 值；同时可以是 <code>bin</code> 表示对一个 x 对应落在 x 里面的数，即统计频数，官方说明书 <a href="https://ggplot2.tidyverse.org/reference/geom_bar.html" target="_blank" rel="noopener">geom_bar.html</a><ul><li><code>stat</code> 函数有 <code>stat_bin()</code> 、 <code>stat_count()</code> 、<code>stat_density()</code>、<code>stat_bin_2d()</code>、<code>stat_bind_hex()</code>、<code>stat_density_2d()</code>、<code>stat_ellipse()</code>、<code>stat_contour()</code>、<code>stat_summary_hex()</code>、<code>stat_summary_2d()</code>、<code>stat_boxplot()</code>、<code>stat_ydensity()</code>、<code>stat_ecdf()</code>、 <code>stat_quantile()</code>、<code>stat_smooth()</code>、  <code>stat_qq()</code>、<code>stat_summary(fun.data = &quot;mean_cl_boot&quot;)</code>、<code>stat_summary_bin(fun.y = &quot;mean&quot;, geom = &quot;bar&quot;)</code>、<code>stat_unique()</code> 等，<strong>最重要的是还可以自定函数 <code>stat_function(aes(x = -3:3), n = 99, fun = dnorm, args = list(sd=0.5))</code></strong>，详情见 <a href="https://www.rstudio.com/resources/cheatsheets/" target="_blank" rel="noopener">ggplot2 cheat sheet</a>，有时间要好好看下每一个对应的功能。</li></ul></li><li><code>position = stack</code>: 用 <code>Cheat sheet</code> 里面内容展示，一目了然。<code>stack</code> 表示堆积，<code>dodge</code> 表示分开，<code>fill</code> 表示百分比填充，<code>jitter</code> 表示散点图抖动，<code>nudge</code> 表示注释信息远离点。<br><img src="https://upload-images.jianshu.io/upload_images/6223615-78e0626182d6e4c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></li></ul></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- ggplot(data, aes(x = reorder(name, -age_mort), y = age_mort))  </span><br><span class="line">gg &lt;- gg + </span><br><span class="line">  geom_bar(stat          = &quot;identity&quot;, position = &quot;stack&quot;, width = 0.65, </span><br><span class="line">           fill          = &quot;#6D7C83&quot;, alpha = 0.4)</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/6223615-004a2e74bd10b668.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="2、geom-segment-函数来画直线"><a href="#2、geom-segment-函数来画直线" class="headerlink" title="2、geom_segment() 函数来画直线"></a>2、<code>geom_segment()</code> 函数来画直线</h4><ul><li><strong>2、</strong> 通过 <code>geom_segment()</code> 函数来画直线, 因为这里是表示柱子，可以理解为线条，主要要指定 x 对应的那一根柱子，然后再指定纵向即 Y 轴的起始 <code>age_deb</code> 和 终止 <code>age_fin</code> 坐标即可，<code>size = 2.3</code> 制定柱子的宽度，不宜太大，然后涂上颜色。<blockquote><p>至于这个函数式做什么的呢？就是你提供一个四边形的区间，你就可以画出一个四边形，详情可以参考 <strong><code>杜雨</code></strong>老师写的一篇超级棒的素材 <a href="https://zhuanlan.zhihu.com/p/37072513" target="_blank" rel="noopener">ggplot2 都有哪些使用不多但是却异常强大的图层函数</a><br>引用其中一句话 <code>geom_segment 通常用于制作直线段图，路径图、放射线图等，思路也很简单，只需要指定每一条线段的起点坐标、终点坐标即可。即分别制定 x,y,xend,yend</code></p><ul><li>后面会涉及一个函数 <code>geom_curve()</code> 用来画弧线，用官方 <a href="https://ggplot2.tidyverse.org/reference/geom_segment.html" target="_blank" rel="noopener">geom_segment</a> 一张图说明<br><img src="https://upload-images.jianshu.io/upload_images/6223615-b07974999cf30cb5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></li></ul></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- gg + </span><br><span class="line">  geom_segment(aes(y    = age_deb, x = name,</span><br><span class="line">                   yend = age_fin, xend = name),</span><br><span class="line">               color    = &quot;#175676&quot;, size = 2.3, alpha = 0.8)  # size = 2.3 制定柱子的宽度，不宜太大</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/6223615-949981762eb495c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="3、geom-errorbar-加上误差线"><a href="#3、geom-errorbar-加上误差线" class="headerlink" title="3、geom_errorbar() 加上误差线"></a>3、<code>geom_errorbar()</code> 加上误差线</h4><ul><li><strong>3、</strong> <code>geom_errorbar()</code> 加上误差线，这里起始并不是真正的加上误差线，给我感觉就是在每个柱子最上放划一道横线。用上面的函数 <code>geom_segment()</code> 也可以做到。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- gg + </span><br><span class="line">  geom_errorbar(aes(y    = age_mort, x = name, </span><br><span class="line">                    ymin = age_mort, ymax = age_mort),</span><br><span class="line">                color    = &quot;black&quot;, width = 0.85)</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/6223615-0b3e329ad34d5f6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="4、-geom-point-函数加上散点图"><a href="#4、-geom-point-函数加上散点图" class="headerlink" title="4、 geom_point() 函数加上散点图"></a>4、 <code>geom_point()</code> 函数加上散点图</h4><ul><li><strong>4、</strong>  通过 <code>geom_point()</code> 函数加上散点图（ <code>仔细看柱子顶端中间多了一个点</code> ），并且通过 <code>coord_flip()</code> 函数将 X 和 Y 轴进行交换<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- gg + geom_point(aes(name, age_mort), </span><br><span class="line">                      colour = &quot;black&quot;, size = 1)  # 我将原文 0.75 改成了 1 ，这样点的效果好点</span><br><span class="line">gg &lt;- gg + coord_flip()</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/6223615-b41db029f17dd9cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>0)</p><h4 id="5、-scale-y-continuous-函数调整-y-坐标轴刻度尺的内容和范围"><a href="#5、-scale-y-continuous-函数调整-y-坐标轴刻度尺的内容和范围" class="headerlink" title="5、 scale_y_continuous() 函数调整 y 坐标轴刻度尺的内容和范围"></a>5、 <code>scale_y_continuous()</code> 函数调整 y 坐标轴刻度尺的内容和范围</h4><ul><li><strong>5、</strong>  <code>scale_y_continuous()</code> 函数调整 y 坐标轴刻度尺的内容和范围，注意因为我们是通过函数 <code>coord_flip()</code> 将 xy 轴交换了，但是修改参数的时候，仍然要对应之前的坐标轴。<ul><li><code>scale_y_continuous()</code> 函数，指定 y 轴刻度尺标签，<code>breaks</code> 展示需要的内容，<code>limits</code> 指定 y 轴的范围。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- gg + scale_y_continuous(breaks = seq(0, 80, 10), </span><br><span class="line">                              limits = c(0, 80)) </span><br><span class="line"></span><br><span class="line">seq(0, 80, 10)</span><br><span class="line">[1]  0 10 20 30 40 50 60 70 80</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/6223615-d37a0ea6766579a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="6、expand-limits-函数可以用来单向扩展阈值"><a href="#6、expand-limits-函数可以用来单向扩展阈值" class="headerlink" title="6、expand_limits() 函数可以用来单向扩展阈值"></a>6、<code>expand_limits()</code> 函数可以用来单向扩展阈值</h4><ul><li><strong>6、</strong>  <code>expand_limits()</code> 函数可以用来单向扩展阈值，也可以用来指定 xy 轴的范围，这里给后面要添加箭头留白。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- gg + expand_limits(x = c(0, 56)) # 没咋理解这一步加不加有啥区别，先操作，再回来解释</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/6223615-eb291c7f12aa0fc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="7、-theme-函数来调整主题"><a href="#7、-theme-函数来调整主题" class="headerlink" title="7、 theme() 函数来调整主题"></a>7、 <code>theme()</code> 函数来调整主题</h4><ul><li><p><strong>7、</strong> 通过 <code>theme()</code> 函数来调整主题，决定哪些显示哪些不显示</p><ul><li><p><a href="https://ggplot2.tidyverse.org/reference/theme.html" target="_blank" rel="noopener">theme 官方参数详解</a></p></li><li><p><a href="http://www.rpubs.com/lihaoyi/156592" target="_blank" rel="noopener">ggplot2主题设置</a></p></li><li><p><code>theme()</code> 函数参数详解，来源：<a href="https://www.jianshu.com/p/3ec860e87832" target="_blank" rel="noopener">ggplot2 学习笔记系列之主题（theme）设置</a></p></li><li><p><strong>这个应该是中文相对详细的：</strong> <a href="https://blog.csdn.net/u014801157/article/details/24372531" target="_blank" rel="noopener">ggplot2 作图详解 7（完）：主题（theme）设置</a></p></li><li><p>搜关键词 <strong>ggplot2 theme</strong> ， 一堆供你参考<br><img src="https://upload-images.jianshu.io/upload_images/6223615-474d2388c21dba36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><blockquote><p>记住几个主要的吧</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">参数设置内容继承自</span><br><span class="line">line所有线属性 </span><br><span class="line">rect所有矩形区域属性 </span><br><span class="line">text所有文本相关属性 </span><br><span class="line">title所有标题属性 </span><br><span class="line">axis.title坐标轴标题</span><br><span class="line">axis.title.xx 轴属性axis.title</span><br><span class="line">axis.title.yy 轴属性axis.title</span><br><span class="line">axis.text坐标轴刻度标签属性  </span><br><span class="line">axis.ticks坐标轴刻度线 </span><br><span class="line">axis.ticks.length刻度线长度 </span><br><span class="line">axis.ticks.margin刻度线和刻度标签之间的间距 </span><br><span class="line">axis.line坐标轴线 </span><br><span class="line">legend.background图例背景</span><br><span class="line">legend.margin图例边界 </span><br><span class="line">legend.key图例符号 </span><br><span class="line">legend.key.size图例符号大小 </span><br><span class="line">legend.key.height图例符号高度 </span><br><span class="line">legend.key.width图例符号宽度 </span><br><span class="line">legend.text图例文字标签 </span><br><span class="line">legend.text.align图例文字标签对齐方式0 为左齐，1 为右齐</span><br><span class="line">legend.title图例标题text</span><br><span class="line">legend.title.align图例标题对齐方式 </span><br><span class="line">legend.position图例位置left, right, bottom, top, 两数字向量</span><br><span class="line">legend.direction图例排列方向&quot;horizontal&quot; or &quot;vertical&quot;</span><br><span class="line">legend.justification居中方式center 或两数字向量</span><br><span class="line">legend.box多图例的排列方式&quot;horizontal&quot; or &quot;vertical&quot;</span><br><span class="line">legend.box.just多图例居中方式 </span><br><span class="line">panel.background绘图区背景</span><br><span class="line">panel.border绘图区边框</span><br><span class="line">panel.margin分面绘图区之间的边距 </span><br><span class="line">panel.grid绘图区网格线</span><br><span class="line">panel.grid.major主网格线 </span><br><span class="line">panel.grid.minor次网格线   </span><br><span class="line">plot.background整个图形的背景 </span><br><span class="line">plot.title图形标题 </span><br><span class="line">plot.margin图形边距top, right, bottom, left</span><br><span class="line">strip.background分面标签背景</span><br><span class="line">strip.text分面标签文本</span><br></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- gg +  theme(panel.border       = element_blank(), # 绘图区边框</span><br><span class="line">                  panel.background   = element_blank(), # 绘图区背景，这里会变成纯白，没有灰色背景</span><br><span class="line">                  plot.background    = element_blank(), # 整个图形的背景</span><br><span class="line">                  panel.grid.major.x = element_line(size = 0.2,linetype = &quot;dotted&quot;, color = &quot;#6D7C83&quot;), # 垂直 x 轴的主网格线的类型、粗细、以及颜色</span><br><span class="line">                  panel.grid.major.y = element_blank(), # 同上，只不过这里选择为空，不显示这条线，其实有点多余，本身就没有这里</span><br><span class="line">                  panel.grid.minor   = element_blank(), # 次网格线</span><br><span class="line">                  axis.line.x        = element_blank(), # 坐标轴线 x</span><br><span class="line">                  axis.line.y        = element_blank(), # 坐标轴线 y</span><br><span class="line">                  axis.ticks.y       = element_blank(), # 坐标轴 y 刻度线</span><br><span class="line">                  axis.ticks.x       = element_blank())  # 坐标轴 x 刻度线</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/6223615-364e897867d89b68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="8、-labs-函数来修改所有标签内容"><a href="#8、-labs-函数来修改所有标签内容" class="headerlink" title="8、 labs() 函数来修改所有标签内容"></a>8、 <code>labs()</code> 函数来修改所有标签内容</h4><ul><li><strong>8、</strong> 通过 <code>labs()</code> 函数来修改所有标签内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- gg + labs(title  = &quot; &quot;,</span><br><span class="line">              subtitle = &quot;&quot;,</span><br><span class="line">              y        = &quot; &quot;,</span><br><span class="line">              x        = &quot; &quot;)</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/6223615-6749fbb02d8195ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="9、-theme-函数来修改所有坐标轴刻度尺内容"><a href="#9、-theme-函数来修改所有坐标轴刻度尺内容" class="headerlink" title="9、 theme() 函数来修改所有坐标轴刻度尺内容"></a>9、 <code>theme()</code> 函数来修改所有坐标轴刻度尺内容</h4><ul><li><strong>9、</strong> 通过 <code>theme()</code> 函数来修改所有坐标轴刻度尺内容，可以看到 xy 轴刻度尺的字体和颜色都改变了。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- gg + theme(plot.title    = element_blank(),</span><br><span class="line">               plot.subtitle   = element_blank(),</span><br><span class="line">               axis.title.y    = element_blank(),</span><br><span class="line">               axis.title.x    = element_blank(),</span><br><span class="line">               axis.text.y     = element_text(hjust = 1, vjust = 0.5, size = 12,</span><br><span class="line">                                              color = &quot;#6D7C83&quot;, face = &quot;bold&quot;),</span><br><span class="line">               axis.text.x     = element_text(hjust = 0.5, vjust = 0, size = 12,</span><br><span class="line">                                              color = &quot;#6D7C83&quot;, face = &quot;bold&quot;)</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/6223615-7614fdaf45b69388.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="10、geom-curve-函数用来画弧线，来实现图中的箭头标志"><a href="#10、geom-curve-函数用来画弧线，来实现图中的箭头标志" class="headerlink" title="10、geom_curve() 函数用来画弧线，来实现图中的箭头标志"></a>10、<code>geom_curve()</code> 函数用来画<strong>弧线</strong>，来实现图中的<strong>箭头标志</strong></h4><ul><li><strong>10、</strong> 通过 <code>geom_curve()</code> 函数用来画<strong>弧线</strong>，来实现图中的<strong>箭头标志</strong>，这里我们可以看出来前面的函数 <code>expand_limits()</code> 是为了给这里的箭头留白。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 制备箭头的坐标</span><br><span class="line">arrows &lt;- tibble(    </span><br><span class="line">  x1 = c(50, 16, 53.5, 53.5, 53.5),    </span><br><span class="line">  x2 = c(49, 15,   51,   51,   51),    </span><br><span class="line">  y1 = c(35, 70,    5,   25,   40),    </span><br><span class="line">  y2 = c(22, 61,    0,   13,   19)  </span><br><span class="line">) </span><br><span class="line"></span><br><span class="line"># 添加箭头</span><br><span class="line">gg &lt;- gg +    </span><br><span class="line">  geom_curve(data                  = arrows, </span><br><span class="line">                         aes(x     = x1, y = y1, xend = x2, yend = y2),</span><br><span class="line">                         arrow     = arrow(length = unit(0.1, &quot;inch&quot;)),</span><br><span class="line">                         size      = 0.3, </span><br><span class="line">                         color     = &quot;#6D7C83&quot;,</span><br><span class="line">                         curvature = -0.3)</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/6223615-62591c232d4acaf7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="11、annotate-函数在图上加一点文本注释"><a href="#11、annotate-函数在图上加一点文本注释" class="headerlink" title="11、annotate() 函数在图上加一点文本注释"></a>11、<code>annotate()</code> 函数在图上加一点文本注释</h4><ul><li><strong>11、</strong> 使用 <code>annotate()</code> 函数在图上加一点文本注释，从这里可以发现作者全文的颜色都是统一的。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- gg + </span><br><span class="line">  annotate(geom  = &quot;text&quot;, x = 50, y = 35, label = &quot;Le plus jeune à\ndevenir Empereur&quot;, </span><br><span class="line">           color = &quot;#6D7C83&quot;, size=3, hjust = 0, vjust = 0.5, fontface = &quot;bold&quot;)</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/6223615-027a2e0f780f0ecf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="12、annotate-函数在图上其它几处加一点文本注释"><a href="#12、annotate-函数在图上其它几处加一点文本注释" class="headerlink" title="12、annotate() 函数在图上其它几处加一点文本注释"></a>12、<code>annotate()</code> 函数在图上其它几处加一点文本注释</h4><ul><li><strong>12、</strong>   使用 <code>annotate()</code> 函数在图上其它几处加文本注释<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">gg &lt;- gg +</span><br><span class="line">  annotate(geom          = &quot;text&quot;, x = 18, y = 70, label = &quot;Son reigne\na pris fin\navant\nson décès&quot;, </span><br><span class="line">           color         = &quot;#6D7C83&quot;, size = 3, hjust = 0.5, vjust = 0.5, fontface = &quot;bold&quot;)  </span><br><span class="line"></span><br><span class="line">gg &lt;- gg + </span><br><span class="line">  annotate(geom          = &quot;text&quot;, x = 54,y = 5, label = &quot;Naissance&quot;, </span><br><span class="line">           color         = &quot;#6D7C83&quot;, size = 3, hjust = 0.5,vjust = 0.5, fontface = &quot;bold&quot;)  </span><br><span class="line"></span><br><span class="line">gg &lt;- gg + annotate(geom = &quot;text&quot;, x = 55, y = 25, label = &quot;Début du\nreigne&quot;,</span><br><span class="line">                  color  = &quot;#6D7C83&quot;, size = 3, hjust = 0.5,vjust = 0.8, fontface = &quot;bold&quot;)</span><br><span class="line"></span><br><span class="line">gg &lt;- gg + annotate(geom = &quot;text&quot;, x = 54,y = 40, label = &quot;Décès&quot;,</span><br><span class="line">                  color  = &quot;#6D7C83&quot;, size = 3, hjust = 0.5,vjust = 0.5, fontface = &quot;bold&quot;)</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/6223615-e587175f52513a03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h2 id="我的膝盖现在还疼，为啥？我跪着学完的。"><a href="#我的膝盖现在还疼，为啥？我跪着学完的。" class="headerlink" title="我的膝盖现在还疼，为啥？我跪着学完的。"></a>我的膝盖现在还疼，为啥？我跪着学完的。</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;首先我是这是我日常逛-twitter-看到的，然后我又是一个搬运工，&quot;&gt;&lt;a href=&quot;#首先我是这是我日常逛-twitter-看到的，然后我又是一个搬运工，&quot; class=&quot;headerlink&quot; title=&quot;首先我是这是我日常逛 twitter 看到的，然
      
    
    </summary>
    
      <category term="R 可视化" scheme="http://yoursite.com/categories/R-%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="可视化" scheme="http://yoursite.com/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>ggplot2 绘制热图</title>
    <link href="http://yoursite.com/2019/08/17/ggplot2-%E7%BB%98%E5%88%B6%E7%83%AD%E5%9B%BE/"/>
    <id>http://yoursite.com/2019/08/17/ggplot2-绘制热图/</id>
    <published>2019-08-17T09:36:47.000Z</published>
    <updated>2019-08-17T09:38:11.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ggplot2-绘制热图"><a href="#ggplot2-绘制热图" class="headerlink" title="ggplot2 绘制热图"></a>ggplot2 绘制热图</h2><ul><li>参考：哪里不会搜哪里，哈哈哈</li><li>其实归根到底就是全文要敲用判断和 <code>paste()</code> 或者 <code>paste0()</code></li><li><code>tidyverse::case_when()</code></li><li><code>factor()</code>: 重定义因子顺序</li><li><a href="https://download.cnet.com/TakeColor/3000-2192_4-10387506.html" target="_blank" rel="noopener">takecolor 下载链接</a></li><li>也可以看我简书 <a href="https://www.jianshu.com/p/7b2c479eddef" target="_blank" rel="noopener">可能是 R 语言最全调色板：Paletteer 包 和 自己慢慢收集</a> 的详细关于配色的操作<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">library(tidyverse)</span><br><span class="line">library(reshape2)</span><br><span class="line"></span><br><span class="line">a &lt;- matrix(rnorm(90), 9, 10)</span><br><span class="line">colnames(a) &lt;- letters[1:10]</span><br><span class="line">rownames(a) &lt;- letters[1:9]</span><br><span class="line">data &lt;- melt(a)</span><br><span class="line"></span><br><span class="line">data &lt;- data %&gt;%</span><br><span class="line">  mutate(text = case_when(  # 一定要 get 到 case_when() 函数奥秘</span><br><span class="line">    value &gt; 0 ~ paste(round(value, 2), &quot;\n*&quot;), # round() 只保留两位小数</span><br><span class="line">    value &lt;= 0 ~ paste(round(value, 2), &quot;\n**&quot;)))</span><br><span class="line">data$new_Var1 &lt;- factor(data$Var1, levels = c(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;)) # 重新排序因子，决定坐标轴出图顺序</span><br><span class="line">data$new_Var2 &lt;- factor(data$Var2, levels = rev(c(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;))) # 同上</span><br><span class="line"></span><br><span class="line">ggplot(data, aes(new_Var1, new_Var2)) +</span><br><span class="line">  geom_tile(aes(fill = value), colour = &quot;grey&quot;, size = 1)+</span><br><span class="line">  scale_fill_gradient2(low = &quot;#5C5DAF&quot;,mid = &quot;white&quot;,high = &quot;#EA2E2D&quot;) + # 这里可以用 windowns 小工具 takecolor 取色，看中哪个文章就吸哪个文章</span><br><span class="line">  # 比如这篇 https://www.nature.com/articles/nmeth.1902</span><br><span class="line">  geom_text(aes(label=text),col =&quot;black&quot;,size = 5) +</span><br><span class="line">  theme_minimal() + # 不要背景</span><br><span class="line">  theme(axis.title.x=element_blank(), # 去掉 title</span><br><span class="line">        axis.ticks.x=element_blank(), # 去掉x 轴</span><br><span class="line">        axis.title.y=element_blank(), # 去掉 y 轴</span><br><span class="line">        axis.text.x = element_text(angle = 45, hjust = 1, size = 14, face = &quot;bold&quot;), # 调整x轴文字，字体加粗</span><br><span class="line">        axis.text.y = element_text(size = 14, face = &quot;bold&quot;)) + #调整y轴文字</span><br><span class="line">  labs(fill =paste0(&quot; * p &lt; 0&quot;,&quot;\n\n&quot;,&quot;** p &gt; 0&quot;,&quot;\n\n&quot;,&quot;Correlation&quot;)) +   # 修改 legend 内容</span><br><span class="line">  scale_x_discrete(position = &quot;top&quot;) # 将 X 轴放置在最上面</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://raw.githubusercontent.com/qliugithub/PicGo/master/ggplot2%E7%BB%98%E5%88%B6%E7%83%AD%E5%9B%BE.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ggplot2-绘制热图&quot;&gt;&lt;a href=&quot;#ggplot2-绘制热图&quot; class=&quot;headerlink&quot; title=&quot;ggplot2 绘制热图&quot;&gt;&lt;/a&gt;ggplot2 绘制热图&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;参考：哪里不会搜哪里，哈哈哈&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="R 可视化" scheme="http://yoursite.com/categories/R-%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="可视化" scheme="http://yoursite.com/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>我的 hexo next 博客搭建</title>
    <link href="http://yoursite.com/2019/08/01/%E6%88%91%E7%9A%84-hexo-next-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2019/08/01/我的-hexo-next-博客搭建/</id>
    <published>2019-08-01T13:25:22.000Z</published>
    <updated>2019-08-01T13:26:01.659Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul><li><p><a href="https://michael728.github.io/2019/05/19/hexo-blog-full-note/" target="_blank" rel="noopener"> 3.9 教程 </a></p></li><li><p>Next主题美化：<a href="https://siriusq.top/Next主题美化" target="_blank" rel="noopener">https://siriusq.top/Next%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96</a></p></li><li><p>好评: <a href="https://me.idealli.com/post/e8d13fc.html" target="_blank" rel="noopener">https://me.idealli.com/post/e8d13fc.html</a></p></li></ul><h4 id="hexo-安装"><a href="#hexo-安装" class="headerlink" title="hexo 安装"></a>hexo 安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"># 检查安装是否成功：</span><br><span class="line">hexo version</span><br></pre></td></tr></table></figure><h4 id="初始化-hexo"><a href="#初始化-hexo" class="headerlink" title="初始化 hexo"></a>初始化 hexo</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install eslint@4.x babel-eslint@8 --save-dev</span><br><span class="line"></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="启动本地服务器"><a href="#启动本地服务器" class="headerlink" title="启动本地服务器"></a>启动本地服务器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h4 id="浏览器访问网址："><a href="#浏览器访问网址：" class="headerlink" title="浏览器访问网址："></a>浏览器访问网址：</h4><ul><li><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></li></ul><h4 id="部署到远端-github"><a href="#部署到远端-github" class="headerlink" title="部署到远端 github"></a>部署到远端 github</h4><ul><li>安装 <code>hexo-deployer-git</code> 插件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ul><li>需要设置文件：<strong>特别关键</strong></li><li>修改 <code>_config.yml</code>（在站点目录下）。文件末尾修改为</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 部署到 github 远端</span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/qliugithub/qliugithub.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><ul><li>推送到GithubPages</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><hr><h4 id="至此框架就搭好了"><a href="#至此框架就搭好了" class="headerlink" title="至此框架就搭好了"></a>至此框架就搭好了</h4><h4 id="next-主题"><a href="#next-主题" class="headerlink" title="next 主题"></a><code>next</code> 主题</h4><h4 id="主题下载"><a href="#主题下载" class="headerlink" title="主题下载"></a>主题下载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h4 id="更改站点配置文件-config-yml-的-theme-字段，为主题文件夹的名称："><a href="#更改站点配置文件-config-yml-的-theme-字段，为主题文件夹的名称：" class="headerlink" title="更改站点配置文件_config.yml 的 theme 字段，为主题文件夹的名称："></a>更改站点配置文件<code>_config.yml</code> 的 <code>theme</code> 字段，为主题文件夹的名称：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><h4 id="更新到远端"><a href="#更新到远端" class="headerlink" title="更新到远端"></a>更新到远端</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp; hexo g &amp; hexo d</span><br></pre></td></tr></table></figure><h4 id="设置-语言"><a href="#设置-语言" class="headerlink" title="设置 语言"></a>设置 语言</h4><ul><li>编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure><h4 id="设置-菜单"><a href="#设置-菜单" class="headerlink" title="设置 菜单"></a>设置 菜单</h4><ul><li>编辑 主题配置文件，修改以下内容：<ul><li>设定菜单内容，对应的字段是 menu。 菜单内容的设置格式是：<code>item name: link</code>。其中 <code>item name</code> 是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译</li></ul></li></ul><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install --save core-js@^3</span><br></pre></td></tr></table></figure><h4 id="设置-语言-1"><a href="#设置-语言-1" class="headerlink" title="设置 语言"></a>设置 语言</h4><ul><li><h4 id="更改站点配置文件-config-yml-的-theme-字段，为主题文件夹的名称：-1"><a href="#更改站点配置文件-config-yml-的-theme-字段，为主题文件夹的名称：-1" class="headerlink" title="更改站点配置文件_config.yml 的 theme 字段，为主题文件夹的名称："></a>更改站点配置文件<code>_config.yml</code> 的 <code>theme</code> 字段，为主题文件夹的名称：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Extensions</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Plugins: https://hexo.io/plugins/</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Themes: https://hexo.io/themes/</span></span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure></li></ul><h4 id="设置名称-与语言"><a href="#设置名称-与语言" class="headerlink" title="设置名称 与语言"></a>设置名称 与语言</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Site</span></span><br><span class="line">title: qliu's blog</span><br><span class="line">subtitle: 二货潜不学习</span><br><span class="line">description: 就是不学习</span><br><span class="line">keywords:</span><br><span class="line">author: 不学生物的二货潜</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure><p><img src="F:%5C%E7%AE%80%E4%B9%A6%E5%9B%BE%5Chexo%5C1563440780399.png" alt="1563440780399"></p><h4 id="设置-菜单-1"><a href="#设置-菜单-1" class="headerlink" title="设置 菜单"></a>设置 菜单</h4><ul><li><p>编辑 <strong>主题配置文件</strong></p></li><li><p>设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 <code>languages/{language}.yml</code>（<code>{language}</code> 为你所使用的语言）。</p><p>以简体中文为例，若你需要添加一个菜单项，比如 <code>something</code>。那么就需要修改对应的翻译文件<code>languages/zh-CN.yml</code>，在 <code>menu</code> 字段下添加一项：</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home # 第二个home 表示对应的图标</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line"><span class="meta">  #</span><span class="bash">schedule: /schedule/ || calendar</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">sitemap: /sitemap.xml || sitemap</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><h4 id="设置-头像"><a href="#设置-头像" class="headerlink" title="设置 头像"></a>设置 头像</h4><ul><li>把图片放入 <code>themes/next/source/images</code> 下<br>打开<code>themes/next/_config.yml</code>文件，搜索  <code>Sidebar Avatar</code> 关键字<br>设置为 <code>url: /images/epigenetics.png</code></li></ul><p><img src="F:%5C%E7%AE%80%E4%B9%A6%E5%9B%BE%5Chexo%5C1563441918651.png" alt="1563441918651"></p><h4 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h4><ul><li>打开 <code>themes/next/_config.yml</code> 文件,搜索关键字<code>social</code> ,然后添加社交站点名称与地址即可。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/qliugithub || github</span><br><span class="line">  #E-Mail: mailto:yourname@gmail.com || envelope</span><br><span class="line">  #Weibo: https://weibo.com/yourname || weibo</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  Twitter: https://twitter.com/BioQliu || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br><span class="line">  简书: https://www.jianshu.com/u/ab6dcc5b9d97 ||  car</span><br></pre></td></tr></table></figure><blockquote><p>友情链接图标</p></blockquote><ul><li>参考链接：<a href="https://www.jianshu.com/p/efbeddc5eb19" target="_blank" rel="noopener">https://www.jianshu.com/p/efbeddc5eb19</a></li><li>图标库：<a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">http://fontawesome.dashgame.com/</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 打开主题配置文件themes/next/_config.yml，搜索social_icons:,在图标库找自己喜欢的小图标，并将名字复制在如下位置，保存即可</span><br><span class="line"># http://fontawesome.dashgame.com/</span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br><span class="line">  Github: github</span><br><span class="line">  简书: car</span><br><span class="line">  Twitter: twitter</span><br></pre></td></tr></table></figure><h4 id="点击页面浮出文字"><a href="#点击页面浮出文字" class="headerlink" title="点击页面浮出文字"></a>点击页面浮出文字</h4><ul><li>①、鼠标特效很简单，打开<code>\themes\next\layout\_layout.swig</code>文件,在末尾<code>&lt; /body&gt;</code>前添加如下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">/* 鼠标特效 */</span><br><span class="line">var a_idx = 0;</span><br><span class="line">jQuery(document).ready(function($) &#123;</span><br><span class="line">   $(&quot;body&quot;).click(function(e) &#123;</span><br><span class="line">       var a = new Array(&quot;我&quot;, &quot;真的&quot;, &quot;不&quot;, &quot;不喜欢&quot;, &quot;生物&quot;, &quot;不做实验&quot;, &quot;不当咸鱼&quot;);</span><br><span class="line">       var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]);</span><br><span class="line">       a_idx = (a_idx + 1) % a.length;</span><br><span class="line">       var x = e.pageX,</span><br><span class="line">       y = e.pageY;</span><br><span class="line">       $i.css(&#123;</span><br><span class="line">           &quot;z-index&quot;: 999999999999999999999999999999999999999999999999999999999999999999999,</span><br><span class="line">           &quot;top&quot;: y - 20,</span><br><span class="line">           &quot;left&quot;: x,</span><br><span class="line">           &quot;position&quot;: &quot;absolute&quot;,</span><br><span class="line">           &quot;font-weight&quot;: &quot;bold&quot;,</span><br><span class="line">           &quot;color&quot;: &quot;#ff6651&quot;</span><br><span class="line">       &#125;);</span><br><span class="line">       $(&quot;body&quot;).append($i);</span><br><span class="line">       $i.animate(&#123;</span><br><span class="line">           &quot;top&quot;: y - 180,</span><br><span class="line">           &quot;opacity&quot;: 0</span><br><span class="line">       &#125;,</span><br><span class="line">       1500,</span><br><span class="line">       function() &#123;</span><br><span class="line">           $i.remove();</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="添加萌萌哒"><a href="#添加萌萌哒" class="headerlink" title="添加萌萌哒"></a>添加萌萌哒</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装插件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://juejin.im/post/5bebfe51e51d45332a456de0<span class="comment">#heading-27</span></span></span><br><span class="line">npm install --save hexo-helper-live2d</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 我选择 hijiki</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将以下代码添加到根目录站点配置文件`_config.yml，修改&lt;你喜欢的模型名字&gt;</span></span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-hijiki</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 15</span><br><span class="line">    height: 30</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br></pre></td></tr></table></figure><h4 id="炫酷动态背景"><a href="#炫酷动态背景" class="headerlink" title="炫酷动态背景"></a>炫酷动态背景</h4><ul><li>参考链接：<a href="https://blog.csdn.net/sunshine940326/article/details/69933696" target="_blank" rel="noopener">https://blog.csdn.net/sunshine940326/article/details/69933696</a></li><li>添加修改代码<code>next/layout/_layout.swig</code>在<code>&lt;/body&gt;</code>之前加上</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type="text/javascript" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li>在菜单中添加链接。编辑<code>next\_config.yml</code>文件</li><li>主题配置文件中找到<code>canvas_nest</code>，设置成<code>ture</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">canvas_nest: ture</span><br></pre></td></tr></table></figure><h4 id="在网站底部加上访问量"><a href="#在网站底部加上访问量" class="headerlink" title="在网站底部加上访问量"></a>在网站底部加上访问量</h4><ul><li><p>参考链接：<a href="https://chrischen0405.github.io/2018/09/11/post20180911/" target="_blank" rel="noopener">https://chrischen0405.github.io/2018/09/11/post20180911/</a></p></li><li><p>打开<code>themes/next/layout/_partial/footer.swig</code>文件,在<code>copyright</code>前加入以下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>一般显示站点访问量在页脚，所以我们选择在<code>footer.swig</code>中添加标签，同时我们还可以通过修改主题配置来方便选择是否显示访问量，步骤如下：首先，我们在next主题下的<code>_config.yml</code>中加入以下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># visitors count</span><br><span class="line">counter: true</span><br></pre></td></tr></table></figure></li><li><p>之后可以更改counter的值为false来隐藏页脚的访问量统计，然后，我们在<code>themes/next/layout/_partial/footer.swig</code>中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.footer.counter %&#125;</span><br><span class="line">    &lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</span><br><span class="line">    &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">    &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="统计功能"><a href="#统计功能" class="headerlink" title="统计功能"></a>统计功能</h4><ul><li><p><code>hexo 3.9以前报废</code>：新链接 <a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">https://github.com/theme-next/hexo-symbols-count-time</a></p></li><li><p>3.9 版本</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><ul><li><p>站点下 <strong><code>_config.yml</code></strong>  添加</p><ul><li>Activate this plugin in <strong>hexo’s _config.yml</strong> (which locates in the root dir of your blog) by enabled any option:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br></pre></td></tr></table></figure></li><li><p><strong>next</strong> 主题下 <strong><code>_config.yml</code></strong>  添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line">  suffix: mins.</span><br></pre></td></tr></table></figure></li></ul><h4 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h4><ul><li><p>参考链接：<a href="https://juejin.im/post/5c6d20b151882562934c9962#heading-42" target="_blank" rel="noopener">https://juejin.im/post/5c6d20b151882562934c9962#heading-42</a></p></li><li><p>在Hexo根目录，安装插件运行如下命令：</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><ul><li><p>在<strong>站点配置文件</strong>_config.yml中，添加如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Extensions</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Plugins: https://hexo.io/plugins/</span></span></span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure></li><li><p>然后再<strong>主题配置文件</strong>中配置<code>rss</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure></li></ul><h4 id="添加评论模块"><a href="#添加评论模块" class="headerlink" title="添加评论模块"></a>添加评论模块</h4><ul><li><p>来必利 <a href="https://www.livere.com/my_Livere" target="_blank" rel="noopener">https://www.livere.com/my_Livere</a></p><ul><li><p>参考链接：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/33617273" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/33617273</a></li><li><a href="https://www.tryagin.cn/HEXO博客加上来必力（livere）评论/#接入合适的评论" target="_blank" rel="noopener">https://www.tryagin.cn/HEXO%E5%8D%9A%E5%AE%A2%E5%8A%A0%E4%B8%8A%E6%9D%A5%E5%BF%85%E5%8A%9B%EF%BC%88livere%EF%BC%89%E8%AF%84%E8%AE%BA/#%E6%8E%A5%E5%85%A5%E5%90%88%E9%80%82%E7%9A%84%E8%AF%84%E8%AE%BA</a></li><li>顶级参考链接：<a href="https://juejin.im/post/5bebfe51e51d45332a456de0#heading-29" target="_blank" rel="noopener">https://juejin.im/post/5bebfe51e51d45332a456de0#heading-29</a></li></ul></li><li><p>点击上方的安装，选择免费的city版本。</p><p><img src="https://img.mubu.com/document_image/c6a33a29-a863-4fe5-9de1-a3a593ba8e7e-942068.jpg" alt="img"></p></li><li><p>打开主题目录下的<code>/themes/next/_config.yml</code>配置文件，定位到<code>livere_uid</code>字段，粘贴上刚刚复制的<code>UID</code></p><p><img src="https://img.mubu.com/document_image/f5591ec3-748b-4b82-a6a8-33490985e6e9-942068.jpg" alt="img"></p></li><li><p>打开 next 主题下 <code>_config.yml</code>文件，定位到 <code>livere_uid</code>，添加下列信息</p><figure class="highlight plain"><figcaption><span>MTAyMC80NTM4OS8yMTkwMQ</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 显示当前浏览进度</span><br><span class="line"></span><br><span class="line">- 修改`themes/*/_config.yml`，把 false 改为` true：`</span><br><span class="line"></span><br><span class="line">  ```shell</span><br><span class="line">  # Back to top in sidebar</span><br><span class="line">  b2t: true</span><br><span class="line"></span><br><span class="line">  # Scroll percent label in b2t button</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure></li></ul></li><li><p>链接：<a href="https://juejin.im/post/5bebfe51e51d45332a456de0" target="_blank" rel="noopener">https://juejin.im/post/5bebfe51e51d45332a456de0</a></p></li></ul><h4 id="添加网站底部跳动的心"><a href="#添加网站底部跳动的心" class="headerlink" title="添加网站底部跳动的心"></a>添加网站底部跳动的心</h4><ul><li><p>1.在<strong>主题配置文件</strong>中（<code>themes/*/_config.yml</code>）,更改<code>footer</code>;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">垃圾功能毁我重来。</span><br></pre></td></tr></table></figure></li></ul><h4 id="页脚统计信息"><a href="#页脚统计信息" class="headerlink" title="页脚统计信息"></a>页脚统计信息</h4><ul><li>NexT 6.x.x 直接添加了统计的信息，直接将next主题文件夹中的 <strong>_config.yml</strong> 中 <code>busuanzi</code> 统计打开 即可。</li></ul><h4 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h4><ul><li><p>安装插件<code>hexo-generator-searchdb</code>，如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p>编辑 <code>站点配置文件</code>，新增以下内容到任意位置，如下：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search:  path: search.xml  field: post  format: html  limit: 10000</span><br></pre></td></tr></table></figure><ul><li>编辑 <code>主题配置文件</code>，启用本地搜索功能，如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Local searchlocal_search:  enable: true</span><br></pre></td></tr></table></figure><h4 id="添加标签页面"><a href="#添加标签页面" class="headerlink" title="添加标签页面"></a>添加标签页面</h4><ul><li>新建页面</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br><span class="line"><span class="meta">#</span><span class="bash"> INFO  Created: D:\swRJ\hexo_1\<span class="built_in">source</span>\tags\index.md</span></span><br></pre></td></tr></table></figure><ul><li><p>设置页面类型，编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示<strong>标签云</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2019-07-18 20:46:32</span><br><span class="line">type: "tags"</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2019-07-18 20:46:32</span><br><span class="line">type: &quot;tags</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><h4 id="添加分类"><a href="#添加分类" class="headerlink" title="添加分类"></a>添加分类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br><span class="line"># INFO  Created: D:\swRJ\hexo_1\source\categories\index.md</span><br><span class="line"></span><br><span class="line"># 设置页面类型，编辑刚新建的页面，将页面的类型设置为 categories</span><br><span class="line">title: 分类</span><br><span class="line">date: 2019-07-18 20:51:49</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="新建页面的模板"><a href="#新建页面的模板" class="headerlink" title="新建页面的模板"></a>新建页面的模板</h4><ul><li><p>参考链接：<a href="https://linlif.github.io/2017/05/27/Hexo使用攻略-添加分类及标签/" target="_blank" rel="noopener">https://linlif.github.io/2017/05/27/Hexo%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5-%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/</a></p></li><li><p>主目录的 <code>scaffolds</code>目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。</p></li><li><p>所以我们可以打开<code>scaffolds/post.md</code>文件，在tages:上面加入categories:,保存后，之后执行<code>hexo new 文章名</code>命令生成的文件，页面里就有<code>categories:</code>项了</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="翻页设置"><a href="#翻页设置" class="headerlink" title="翻页设置"></a>翻页设置</h4><ul><li><p>共有两处，用于控制每一页显示多少篇博文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &apos;&apos;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &apos;&apos;</span><br><span class="line">  per_page: 12</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 12</span><br><span class="line">pagination_dir: page</span><br></pre></td></tr></table></figure></li><li><p><code>per_page:</code>后设置博文数量，0代表不翻页全部平铺显示</p></li></ul><h4 id="代码块高亮主题"><a href="#代码块高亮主题" class="headerlink" title="代码块高亮主题"></a>代码块高亮主题</h4><ul><li>Next主题内置了tomorrow代码高亮主题，一共有五个，可以去<a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="noopener">Tomorrow</a>查看预览效果，在下面的<code>highlight_theme:</code>中改成自己想要的即可</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">Code</span> <span class="selector-tag">Highlight</span> <span class="selector-tag">theme</span></span><br><span class="line"># Available values: normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line"><span class="selector-tag">highlight_theme</span>: <span class="selector-tag">night</span></span><br></pre></td></tr></table></figure><h4 id="博文压缩"><a href="#博文压缩" class="headerlink" title="博文压缩"></a>博文压缩</h4><ul><li><p>参考来源：<a href="https://www.jianshu.com/p/393d067dba8d" target="_blank" rel="noopener">https://www.jianshu.com/p/393d067dba8d</a></p></li><li><p>打开<code>themes/next/_config.yml</code>文件, 搜索 <code>auto_excerpt</code>, 将 <code>false</code> 改为 <code>true</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Automatically Excerpt. Not recommand.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Please use &lt;!-- more --&gt; <span class="keyword">in</span> the post to control excerpt accurately.</span></span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure></li></ul><h4 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带 # 号的标签"></a>修改文章底部的那个带 <code>#</code> 号的标签</h4><ul><li><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编辑 themes/next/layout/_macro/post.swig，搜索rel=<span class="string">"tag"</span>&gt;<span class="comment">#，将 # 换成&lt;i class="fa fa-tag"&gt;&lt;/i&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改下面为</span></span><br><span class="line">        &lt;div class="post-tags"&gt;</span><br><span class="line">          &#123;% for tag in post.tags %&#125;</span><br><span class="line">            &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&#123;&#123; tag_indicate &#125;&#125; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">          &#123;% endfor %&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">a</span><br><span class="line"></span><br><span class="line">&lt;div class="post-tags"&gt;</span><br><span class="line">    &#123;% for tag in post.tags %&#125;</span><br><span class="line">       &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tag"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="分类页面添加年分类卡"><a href="#分类页面添加年分类卡" class="headerlink" title="分类页面添加年分类卡"></a>分类页面添加年分类卡</h4><ul><li>找到 next 主题下的<code>\layout\category.swig</code>文件，查找<code>for post in page.posts</code>可以看到如下代码：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for post in page.posts %&#125;</span><br><span class="line">  &#123;&#123; post_template.render(post) &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li><p>选中这三行，修改为:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for post in page.posts %&#125;</span><br><span class="line"></span><br><span class="line">&#123;# Show year #&#125;</span><br><span class="line">&#123;% set year %&#125;</span><br><span class="line">&#123;% set post.year = date(post.date, 'YYYY') %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if post.year !== year %&#125;</span><br><span class="line">  &#123;% set year = post.year %&#125;</span><br><span class="line">  &lt;div class="collection-title"&gt;</span><br><span class="line">    &lt;h2 class="archive-year motion-element" id="archive-year-&#123;&#123; year &#125;&#125;"&gt;&#123;&#123; year &#125;&#125;&lt;/h2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;# endshow #&#125;</span><br><span class="line"></span><br><span class="line">  &#123;&#123; post_template.render(post) &#125;&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure></li><li><p>然后在文件末尾加上如下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="写文"><a href="#写文" class="headerlink" title="写文"></a>写文</h4><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;my first post&quot;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h4 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接&quot;&gt;&lt;/a&gt;参考链接&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://michael728.github.io/20
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Qubit 2.0 测 ChIP DNA 浓度</title>
    <link href="http://yoursite.com/2019/07/21/Qbit-2-0-%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/07/21/Qbit-2-0-使用/</id>
    <published>2019-07-21T14:04:24.000Z</published>
    <updated>2019-07-21T14:36:18.182Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Qubit-2-0-Mix-配置"><a href="#Qubit-2-0-Mix-配置" class="headerlink" title="Qubit 2.0 Mix 配置"></a>Qubit 2.0 Mix 配置</h4><ul><li><strong>DNAHS : HS</strong> = <code>1 : 199</code><ul><li>一个样品一般是 <code>1 ul</code> <strong>DNAHS</strong> + <code>199 ul</code> <strong>HS</strong></li></ul></li><li><strong>DNA : Mix</strong> = <code>1 ：199</code><ul><li>即最后测浓度样本为 <code>1 ul</code> <strong>DNA</strong> + <code>199 ul</code>  <strong>Mix</strong></li></ul></li><li>我们这里需要测了 6 个样本的 DNA 浓度，所以需要配置 <strong>7 * Mix</strong><ul><li><strong>Mix</strong> : <code>7 ul</code> <strong>DNAHS</strong> + <code>1393 ul</code> <strong>HS</strong></li></ul></li><li>每一个样本吸取 <code>1 ul</code> 加入 <code>199 ul</code> <strong>Mix</strong> </li></ul><h4 id="Qubit-2-0-仪器使用"><a href="#Qubit-2-0-仪器使用" class="headerlink" title="Qubit 2.0 仪器使用"></a>Qubit 2.0 仪器使用</h4><ol><li>打开 <strong>Qubit 2.0</strong>  ， 点击 <strong>dsDNA High Sensitivity</strong> 参数。</li><li>在弹出的 界面会询问你是否 <strong>Read new Starndard</strong> ，<strong>Yes</strong> 和 <strong>No</strong> 界面选择 <strong>No</strong> 。</li><li>然后点击 <strong>Calculate Stock ConC</strong> 。</li><li>将样本体积（ <strong>Volume of Sample Used</strong> ）设置为 <strong>1 ul</strong>（ <strong>因为我们只取了 1 ul DNA 加入到 Mix 中进行浓度测定</strong> ），然后就可以看到样品浓度了。</li></ol><h4 id="一张图说明流程"><a href="#一张图说明流程" class="headerlink" title="一张图说明流程"></a>一张图说明流程</h4><p><img src="https://raw.githubusercontent.com/qliugithub/PicGo/master/Qbit%202.0%20%E4%BD%BF%E7%94%A8.png" alt></p><h4 id="最终浓度为"><a href="#最终浓度为" class="headerlink" title="最终浓度为"></a>最终浓度为</h4><table><thead><tr><th align="center">Sample</th><th align="center">浓度（ ng/ul ）</th></tr></thead><tbody><tr><td align="center">ZH</td><td align="center">8.28</td></tr><tr><td align="center">7</td><td align="center">0.29</td></tr><tr><td align="center">CK1</td><td align="center">0.632</td></tr><tr><td align="center">CK2</td><td align="center">0.42</td></tr><tr><td align="center">J1</td><td align="center">0.5</td></tr><tr><td align="center">J2</td><td align="center">0.432</td></tr></tbody></table><p><strong>这浓度。。。。准备重做吧！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Qubit-2-0-Mix-配置&quot;&gt;&lt;a href=&quot;#Qubit-2-0-Mix-配置&quot; class=&quot;headerlink&quot; title=&quot;Qubit 2.0 Mix 配置&quot;&gt;&lt;/a&gt;Qubit 2.0 Mix 配置&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;
      
    
    </summary>
    
      <category term="实验" scheme="http://yoursite.com/categories/%E5%AE%9E%E9%AA%8C/"/>
    
    
      <category term="ChIP" scheme="http://yoursite.com/tags/ChIP/"/>
    
  </entry>
  
  <entry>
    <title>ChIP 实验</title>
    <link href="http://yoursite.com/2019/07/19/ChIP-%E5%AE%9E%E9%AA%8C/"/>
    <id>http://yoursite.com/2019/07/19/ChIP-实验/</id>
    <published>2019-07-19T14:09:06.000Z</published>
    <updated>2019-07-20T12:02:38.788Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="Buffer-配置"><a href="#Buffer-配置" class="headerlink" title="Buffer 配置"></a>Buffer 配置</h2><ul><li>Markdown 语法<ul><li>下标：<code>H&lt;sub&gt;2&lt;/sub&gt;</code> ：H<sub>2</sub>  </li></ul></li></ul><h3 id="需要单独预配的试剂："><a href="#需要单独预配的试剂：" class="headerlink" title="需要单独预配的试剂："></a>需要单独预配的试剂：</h3><ul><li><p><code>所有物品均为进口</code></p></li><li><p>七个 <strong>250 ml</strong> 蓝盖瓶</p></li><li><p>提前一天预约 <strong>4℃ 落地离心机</strong>和 <strong>4℃ 离心机</strong></p></li><li><p>1 ml 、200 ul、10ul 进口枪头各准备一盒</p></li><li><p>2 L <strong>ddH<sub>2</sub>O</strong> <code>注意：保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接</code></p></li><li><p>预配 50 ml <strong>1M MgCl<sub>2</sub> *<em>：0.05 L * 1 M * 分子量 = g *</em>MgCl<sub>2</sub></strong> 溶于 50 ml ddH<sub>2</sub>O</p></li><li><p>预配 50 ml <strong>20% Triton X-100</strong>：10 ml <strong>Triton X-100</strong> + 40 ml ddH<sub>2</sub>O （ 难溶，摇过夜，<strong>提前一天配好</strong> ）</p></li><li><p>预配  50 ml <strong>2.5M LiCl</strong>：<code>LiCL</code> 的相对分子量为 42.3 g/M 。0.05 L * 2.5 M/L * 423.3 g/M = 5.29875 g ≈ 5.3 g   溶于 50ml ddH<sub>2</sub>O</p></li><li><p>预配 50ml <strong>0.2M NaHCO<sub>3</sub></strong>：<code>NaHCO&lt;sub&gt;3&lt;/sub&gt;</code> 的相对分子量为 84 g/M 。需要质量：0.05 L * 0.2 M/L * 84 g/M = 0.84 g ，溶于 50ml ddH<sub>2</sub>O</p></li><li><p><strong>50 ml 离心管 无水乙醇、50 ml 离心管 75% 乙醇</strong></p></li></ul><h3 id="ChIP-BUFFER-1"><a href="#ChIP-BUFFER-1" class="headerlink" title="ChIP-BUFFER-1"></a>ChIP-BUFFER-1</h3><h4 id="Extraction-buffer-1"><a href="#Extraction-buffer-1" class="headerlink" title="Extraction buffer-1"></a>Extraction buffer-1</h4><table><thead><tr><th align="center">Extraction buffer-1</th><th align="center">500 ml 4℃</th></tr></thead><tbody><tr><td align="center"><strong>0.4 M Sucrose</strong> （公用）</td><td align="center">68.46 g</td></tr><tr><td align="center"><strong>1M Tris-HCl PH8.0</strong>（公用）</td><td align="center">5 ml</td></tr><tr><td align="center"><strong>1M MgCl<sub>2</sub></strong> （自己配）</td><td align="center">175 ul</td></tr><tr><td align="center"><strong><code>5mM β-ME</code></strong> （公用）</td><td align="center">500 ul</td></tr><tr><td align="center"><strong><code>Protease inhibitors</code></strong> （公用）</td><td align="center">1 tablet（ EDTA-free ）</td></tr><tr><td align="center"><strong><code>0.1 mM PMSF</code></strong> （公用）</td><td align="center">500 ul</td></tr><tr><td align="center"><strong>dd water</strong> （保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接）</td><td align="center">加到 500 ml</td></tr></tbody></table><blockquote><p><code>注意：</code> <code>Protease inhibitors</code>、<code>PMSF</code>、<code>β-ME</code> 这三种现加。这里需要自己预配 50 ml 1M MgCl<sub>2</sub> </p></blockquote><h4 id="Extraction-buffer-2"><a href="#Extraction-buffer-2" class="headerlink" title="Extraction buffer-2"></a>Extraction buffer-2</h4><table><thead><tr><th align="center">Extraction buffer-2</th><th align="center">200 ml 4℃</th></tr></thead><tbody><tr><td align="center"><strong>0.25 M Sucrose</strong> （公用）</td><td align="center">17.12 g</td></tr><tr><td align="center"><strong>1M Tris-HCl PH8.0</strong>（公用）</td><td align="center">2 ml</td></tr><tr><td align="center"><strong>1M MgCl<sub>2</sub></strong> （自己配）</td><td align="center">2 ml</td></tr><tr><td align="center"><strong>20% Triton X-100</strong>（自己配）</td><td align="center">10 ml</td></tr><tr><td align="center"><strong><code>5mM β-ME</code></strong> （公用）</td><td align="center">70 ul</td></tr><tr><td align="center"><strong><code>Protease inhibitors</code></strong> （公用）</td><td align="center">半粒</td></tr><tr><td align="center"><strong><code>0.1 mM PMSF</code></strong> （公用）</td><td align="center">200 ul</td></tr><tr><td align="center"><strong>dd water</strong> （保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接）</td><td align="center">加到 200 ml</td></tr></tbody></table><blockquote><p><code>注意：</code> <code>Protease inhibitors</code>、<code>PMSF</code>、<code>β-ME</code> 这三种现加。<strong>20% Triton X-100</strong> 提前一天配好。</p></blockquote><h4 id="Extraction-buffer-3-粘稠难溶"><a href="#Extraction-buffer-3-粘稠难溶" class="headerlink" title="Extraction buffer-3 ( 粘稠难溶 )"></a>Extraction buffer-3 ( 粘稠难溶 )</h4><table><thead><tr><th align="center">Extraction buffer-2</th><th align="center">40 ml 4℃</th></tr></thead><tbody><tr><td align="center"><strong>1.7 M Sucrose</strong> （公用）</td><td align="center">23.28 g</td></tr><tr><td align="center"><strong>1M Tris-HCl PH8.0</strong>（公用）</td><td align="center">400 ul</td></tr><tr><td align="center"><strong>1M MgCl<sub>2</sub></strong> （自己配）</td><td align="center">80 ul</td></tr><tr><td align="center"><strong>20% Triton X-100</strong>（自己配）</td><td align="center">300 ul</td></tr><tr><td align="center"><strong><code>5mM β-ME</code></strong> （公用）</td><td align="center">14 ul</td></tr><tr><td align="center"><strong><code>Protease inhibitors</code></strong> （公用）</td><td align="center">半粒</td></tr><tr><td align="center"><strong><code>0.1 mM PMSF</code></strong> （公用）</td><td align="center">40 ul</td></tr><tr><td align="center"><strong>dd water</strong> （保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接）</td><td align="center">加到 40 ml</td></tr></tbody></table><h3 id="ChIP-BUFFER-2"><a href="#ChIP-BUFFER-2" class="headerlink" title="ChIP BUFFER-2"></a>ChIP BUFFER-2</h3><h4 id="Nuclear-lysis-buffer"><a href="#Nuclear-lysis-buffer" class="headerlink" title="Nuclear lysis buffer"></a>Nuclear lysis buffer</h4><table><thead><tr><th align="center">Nuclear lysis buffer</th><th align="center">5 ml 4℃</th></tr></thead><tbody><tr><td align="center"><strong>1M Tris-HCl PH8.0</strong>（公用）</td><td align="center">250 ul</td></tr><tr><td align="center"><strong>0.5 M EDTA</strong>（公用）</td><td align="center">100 ul</td></tr><tr><td align="center"><strong>10% NaCl</strong> （公用）</td><td align="center">100 ul（ <strong>可不加</strong> ）</td></tr><tr><td align="center"><strong>10% SDS</strong>（公用）</td><td align="center">500 ul（ <strong>最后一步加</strong> ）</td></tr><tr><td align="center"><strong><code>0.1 mM PMSF</code></strong> （公用）</td><td align="center">1 ul</td></tr><tr><td align="center"><strong><code>Protease inhibitors</code></strong> （公用）</td><td align="center">50ul （ 一颗溶于 1 ml ddH<sub>2</sub>O）</td></tr><tr><td align="center"><strong>dd water</strong> （保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接）</td><td align="center">加到 5 ml （ 加水 4.1 ml ）</td></tr></tbody></table><blockquote><p>注意现配现用，最后一步再加 <strong>SDS</strong></p></blockquote><h4 id="Low-salt-wash-buffer"><a href="#Low-salt-wash-buffer" class="headerlink" title="Low salt wash buffer"></a>Low salt wash buffer</h4><table><thead><tr><th align="center">Low salt wash buffer</th><th align="center">100 ml 4℃</th></tr></thead><tbody><tr><td align="center"><strong>5M NaCl</strong>（公用）</td><td align="center">3 ml</td></tr><tr><td align="center"><strong>10% SDS</strong>（公用）</td><td align="center">1 ml（ <strong>最后一步加</strong> ）</td></tr><tr><td align="center"><strong>20% Triton X-100</strong> （自己配）</td><td align="center">5 ml</td></tr><tr><td align="center"><strong>0.5M EDTA</strong>（公用）</td><td align="center">400 ul</td></tr><tr><td align="center"><strong>1M Tris-HCl PH8.0</strong>（公用）</td><td align="center">2 ml</td></tr><tr><td align="center"><strong>dd water</strong> （保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接）</td><td align="center">加水到 100 ml</td></tr><tr><td align="center">#### High salt wash buffer</td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">High salt wash buffer</th><th align="center">100 ml 4℃</th></tr></thead><tbody><tr><td align="center"><strong>5M NaCl</strong>（公用）</td><td align="center">10 ml</td></tr><tr><td align="center"><strong>10% SDS</strong>（公用）</td><td align="center">1 ml（ <strong>最后一步加</strong> ）</td></tr><tr><td align="center"><strong>20% Triton X-100</strong> （自己配）</td><td align="center">5 ml</td></tr><tr><td align="center"><strong>0.5M EDTA</strong>（公用）</td><td align="center">400 ul</td></tr><tr><td align="center"><strong>1M Tris-HCl PH8.0</strong>（公用）</td><td align="center">2 ml</td></tr><tr><td align="center"><strong>dd water</strong> （保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接）</td><td align="center">加水到 100 ml</td></tr></tbody></table><h4 id="LiCl-wash-buffer"><a href="#LiCl-wash-buffer" class="headerlink" title="LiCl wash buffer"></a>LiCl wash buffer</h4><table><thead><tr><th align="center">LiCl wash buffer</th><th align="center">100 ml 4℃</th></tr></thead><tbody><tr><td align="center"><strong>2.5M LiCl</strong>（自己配，固体在冰箱二层，白瓶子）</td><td align="center">10 ml</td></tr><tr><td align="center"><strong>0.5% NP-40</strong>（公用）</td><td align="center">1 ml（ <strong>最后一步加</strong> ）</td></tr><tr><td align="center"><strong>0.25% sodium deoxycholate</strong> （自己配，冰箱二层，白瓶子）</td><td align="center">1g</td></tr><tr><td align="center"><strong>0.5M EDTA</strong>（公用）</td><td align="center">200 ul</td></tr><tr><td align="center"><strong>1M Tris-HCl PH8.0</strong>（公用）</td><td align="center">1 ml</td></tr><tr><td align="center"><strong>dd water</strong> （保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接）</td><td align="center">加水到 100 ml</td></tr></tbody></table><blockquote><p>注意这里需要自己配置 <strong>2.5M LiCl</strong>：<code>LiCL</code> 的相对分子量为 42.3 g/M 。</p><p>需要质量：0.05 L * 2.5 M/L * 423.3 g/M = 5.29875 g ≈ 5.3 g</p></blockquote><h3 id="ChIP-BUFFER-3"><a href="#ChIP-BUFFER-3" class="headerlink" title="ChIP BUFFER-3"></a>ChIP BUFFER-3</h3><h4 id="TE-buffer"><a href="#TE-buffer" class="headerlink" title="TE buffer"></a>TE buffer</h4><table><thead><tr><th align="center">1x TE buffer</th><th align="center">50 ml 4℃</th></tr></thead><tbody><tr><td align="center"><strong>1M Tris-HCl PH8.0</strong>（公用）</td><td align="center">1 ml</td></tr><tr><td align="center"><strong>0.5M EDTA</strong>（公用）</td><td align="center">100 ul</td></tr><tr><td align="center"><strong>dd water</strong> （保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接）</td><td align="center">加水到 50 ml</td></tr></tbody></table><h4 id="ChIP-Chromatin-Elution-buffer"><a href="#ChIP-Chromatin-Elution-buffer" class="headerlink" title="ChIP Chromatin Elution buffer"></a>ChIP Chromatin Elution buffer</h4><table><thead><tr><th align="center">ChIP Chromatin Elution buffer</th><th align="center">10 ml RT</th></tr></thead><tbody><tr><td align="center"><strong>10% SDS</strong>（公用）</td><td align="center">1 ml</td></tr><tr><td align="center"><strong>0.2M NaHCO<sub>3</sub></strong>（自己配置，固体在 <strong>sigma</strong> 进口橱柜）</td><td align="center">5 ml</td></tr><tr><td align="center"><strong>dd water</strong> （保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接）</td><td align="center">4 ml</td></tr></tbody></table><blockquote><p>注意这里需要自己配置 <strong>0.2M NaHCO<sub>3</sub></strong>：<code>NaHCO&lt;sub&gt;3&lt;/sub&gt;</code> 的相对分子量为 84 g/M 。</p><p>需要质量：0.05 L * 0.2 M/L * 84 g/M = 0.84 g </p></blockquote><h4 id="ChIP-antibody-dilution-and-magnetic-beads-（Protein-A）washing-buffer"><a href="#ChIP-antibody-dilution-and-magnetic-beads-（Protein-A）washing-buffer" class="headerlink" title="ChIP antibody dilution and magnetic beads （Protein A）washing buffer"></a>ChIP antibody dilution and magnetic beads （Protein A）washing buffer</h4><table><thead><tr><th align="center">dilution &amp; wash buffer</th><th align="center">100 ml 4 ℃</th></tr></thead><tbody><tr><td align="center"><strong>5M NaCl</strong>（公用）</td><td align="center">3.34 ml</td></tr><tr><td align="center"><strong>20% Triton X-100</strong> （自己配）</td><td align="center">5.5 ml</td></tr><tr><td align="center"><strong>0.5M EDTA</strong>（公用）</td><td align="center">240 ul</td></tr><tr><td align="center"><strong>1M Tris-HCl PH8.0</strong>（公用）</td><td align="center">1.67 ml</td></tr><tr><td align="center"><strong>dd water</strong> （保证为 18.2Ω 的超纯水，可去楼下 A 座棉花组接）</td><td align="center">加水到 100 ml</td></tr></tbody></table><h2 id="实验操作"><a href="#实验操作" class="headerlink" title="实验操作"></a>实验操作</h2><h3 id="1-甲醛交联"><a href="#1-甲醛交联" class="headerlink" title="1 甲醛交联"></a>1 甲醛交联</h3><ul><li><ol><li>称取 2 g 组织，加入30 ml <strong>1% 的甲醛</strong>（ EBI 稀释 ）进行交联 <code>30 min</code> （ 感觉这个时间有点长 ）。</li><li>加入 2 ml <strong>2M 甘氨酸</strong>，混匀，重新放入真空仪（ <strong>注意：置于冰盒中，用海绵塞住样品上方</strong> ），抽真空 <code>5 min</code> 终止交联。</li><li>用 dd 水清洗三遍，取出，用纸吸干水分。至于液氮中，<strong>-70℃</strong> 保存。</li></ol></li></ul><h3 id="2-染色质抽提"><a href="#2-染色质抽提" class="headerlink" title="2 染色质抽提"></a>2 染色质抽提</h3><ul><li>提前一天预约 4℃ 落地离心机和 4℃ 离心机</li><li>准备一个大的冰盒。</li><li>准备漏斗（ 一个样品一个 ）、50ml 尖底离心管（第一次过滤用）、50ml 圆底离心管（第二次过滤用）</li><li>检查膜布是否还有</li><li>提前 <code>1h</code> <strong>4 ℃ 冷冻落地离心机</strong></li><li><ol><li>50 ml 进口离心管中加入 30 ml <strong>EBI</strong>，冰上预冷。</li><li>取出交联好的样品，研磨成粉末。在 <strong>2.1</strong> 中预冷的 30 ml <strong>EBI</strong> 中加入粉末，迅速摇匀，埋入冰盒中。冰盒放置在摇床上摇 <code>30 min</code> （ 摇床速度高速 ）</li><li>将<strong>单层的膜布</strong>至于干净漏斗上，将样品进行过滤至新的 <strong>50ml 尖底离心管</strong>中，再用<strong>双层膜布</strong>将过滤后的样品过滤到 <strong>50ml 圆底离心管</strong>中。</li><li>离心之前，用 <strong>EBI</strong>，平衡所有离心管，保证重量一致。<strong>4℃ 离心 4000 rpm</strong> <code>20 min</code>。<ul><li>4℃ 落地离心机使用：<ul><li>4000 rpm </li><li>JA17 转子</li><li>20min</li><li>参数：<strong>ACCEL</strong>：<code>MAX</code>，<strong>DECEL</strong>：<code>MAX</code></li></ul></li></ul></li><li>离心结束后，小心去除离心管，倒去上清（ <strong>注意：倒的方向背离沉淀方向</strong> ）。加入 1ml <strong>EB2</strong>，对准离心<strong>管壁沉淀反复轻柔吹洗混匀</strong>进行<strong>重悬</strong>，将重悬液移至 1.5 ml 进口离心管中（<strong>注意：冰上操作，尽量不要产生气泡</strong>）。</li><li><strong>4℃ 离心 12000g</strong> <code>5min</code>，倒掉上清，加 <strong>EB2</strong> 反复清洗，直至<strong>染色质沉淀泛白</strong>（<strong>冰上，重复 EB2 重悬，离心大概 5~ 6 次左右</strong>）。（<strong><code>此步骤大约 40 min</code></strong>）</li><li>最后一次离心完后，用枪吸干上清，加入 <strong>500 ul EB3</strong>（ <strong>样品少时候可只加 300 ul **），在</strong>冰上**重悬染色质沉淀。</li><li>取一<strong>新的 1.5 ml 离心管</strong>，加入 <strong>500 ul EB3</strong>（ *<em>样品少时候可只加 300 ul，不过前后要对应 *</em>），小心将2.6中的重悬液加入到其中。</li><li><strong>4℃ 离心 16000g <code>1h</code></strong></li><li>离心完后，吸干上清，加入 <strong>400ul 2x Nuclear lysis buffer</strong> （ <strong>样品少时候可只加 300 ul，不过前后要对应 ** ）</strong>重悬裂解** <code>15~20 min</code>，取 <strong>15 ul</strong> 作为超声波处理前的染色质对照，用于检测染色质的完整性（ <strong>可不做</strong> ），剩余样品进行超声波打断，都至于 <strong>-80 ℃</strong> 保存<ol><li>这里需要看加完 400 ul 后，样品不浓稠即可，不然影响后续超声波破碎。</li></ol></li></ol></li></ul><h3 id="3-染色质超声波化"><a href="#3-染色质超声波化" class="headerlink" title="3 染色质超声波化"></a>3 染色质超声波化</h3><ul><li><p>准备：<strong>50 ml 离心管 无水乙醇、50 ml 离心管 75% 乙醇</strong></p></li><li><ol><li>将剩余样品取出，进行超声波打断。</li></ol><ul><li>超声波操作：<strong>A506</strong> ，打一盒冰，加冰至超声波仪器黑线附近，冰不融化即可将样品加入进行超声波打断。调整<strong>每次五分钟</strong>，<strong>其他按键不需要变动</strong>。（第一次 5 ~ 6 次左右，即 <code>30 min</code>，<strong>每一次后需要加冰</strong>，使温度保持低温，然后吸取 <strong>15ul</strong> 检测打断效果。不过一般是需要打断 2h 左右。根据后面纯化的 DNA 跑胶检测再进行决定超声波多久。）</li></ul><ol start="2"><li><p>取 <strong>15 ul</strong> 超声波后的染色质与之前取出的未进行超声波的 <strong>15ul</strong> 染色质分别加入：<strong>465 ml ddH<sub>2</sub>O ** 、</strong>20 ul 5M NaCl<strong>。</strong>65℃ 解交联<strong>（ **仪器在照胶室</strong> ）<code>6h</code> 以上。剩下的染色质 <strong>-80℃</strong> 保存。</p><ol><li>仪器操作：<strong>RPM 80  Temp 65℃</strong></li><li><strong><code>这里可以加一步：解交联后再加入 10ul RNAaes(1:50 加) 42℃ 进行孵育 1h，去除 RNA。</code></strong></li></ol></li><li><p>取出解交联染色质，加入等体积的 <strong>24:1 氯仿：异戊酸</strong> <strong>500 ul</strong>，手动混匀 <code>5 min</code>，然后 <strong>12000 rpm 5min</strong>。小心吸取上清 <strong>400 ul</strong> 左右至新的离心管中，加入 <strong>80 ul 3M NaAC</strong>、<strong>720 ul 预冷无水乙醇</strong>、<strong>2 ul 肝糖原（ -20℃ 的 二抗盒子中，白色管子 ）</strong>，<strong>-70℃</strong> 沉淀 <code>1 h</code> 或者 <strong>-20℃ 过夜</strong>。</p></li><li><p><strong>4℃ 12000 rpm</strong> <code>20 min</code>，弃上清（ <strong>倒扣纸面倒干净液体</strong> ），加入 <strong>1 ml 75% 乙醇</strong>。<strong>4℃ 12000 rpm *<em><code>5 min</code> , 弃上清，再稍离心，用枪小心吸干残液。离心管至于超净台吹干 <code>15 min</code> （ *</em>看不到液体即可</strong> ），加入 <strong>20 ul ddH<sub>2</sub>O</strong> ，<strong>37℃ 烘箱</strong>溶解 <code>15 min</code>。<strong>2%</strong> 琼脂糖凝胶进行检测。 </p><ol><li>进行<strong>离心 20min</strong> 过程可以制备一条 <strong>2% 的胶</strong>。</li><li>若片段大小不是集中在 <strong>200bp</strong> 附近，继续进行超声波打断，然后纯化检测片段大小。</li></ol></li></ol></li></ul><h3 id="4-染色质前处理和免疫共沉淀"><a href="#4-染色质前处理和免疫共沉淀" class="headerlink" title="4 染色质前处理和免疫共沉淀"></a>4 染色质前处理和免疫共沉淀</h3><ul><li><p>需要准备 <strong>Protein A Beads、 磁力架、静音混合器、ChIP dilution &amp; wash buffer</strong></p></li><li><p><strong>Protein A Beads 洗涤</strong>（ <strong>一般晚上进行</strong> ）（ <strong>涉及 Beads 的都是磁力架操作</strong> ）</p><ul><li><p><strong>40 ul Beads</strong>（ <strong>样品少时候加入 20ul 即可</strong> ） + *<em>1 ml ChIP dilution &amp; wash buffer *</em> 洗涤三次</p></li><li><ol><li><p>第一次上下混匀 <strong>Beads</strong> 与 <strong>buffer</strong>，然后在<strong>磁力架</strong>上摇晃吸附 <strong>Beads **直至澄清，不离开</strong>磁力架**倒掉清液。</p></li><li><p>第二次加入 <strong>1 ml Buffer</strong>, 取下架子，混匀，放置在 <strong>4℃ 冰箱中的静音混合器</strong>上 <code>10 min</code> 洗涤。然后在<strong>磁力架</strong>上摇晃吸附 <strong>Beads **直至澄清，不离开</strong>磁力架**倒掉清液。</p></li><li><p>第三次加入 <strong>1ml Buffer</strong> ，混匀，放置在磁力架上，上下颠倒数次至澄清，倒掉清液，用枪吸干残液，去掉气泡。</p></li><li><p>加入 <strong>40 ul Buffer</strong> ，沿 <strong>Beads</strong> 上面缓慢加入（ <strong>由于加的 Buffer 量上，所以对着 Beads, 后续操作均不对着 Beads 加</strong> ），尽量不要产生气泡，放置冰上。</p></li><li><p>进行 <strong>4</strong> 后，将超声波后染色质进行 <strong>4℃ 12000rpm 5min</strong>，吸上清，取 <strong>20 ul</strong> 作为 <strong>Input</strong> ，剩下的加入到洗涤后的 <strong>Beads</strong> 中，混匀。然后放置在 <strong>4℃ 冰箱中静音混合器</strong> <code>2h</code>。然后 <strong>4℃ 12000rpm 5min</strong>，放置在磁力架上，吸上清至一个新的 <strong>1.5 ml 离心管中</strong>。</p></li><li><p>在<strong>步骤 5 中</strong>静音混合器上 <code>2h</code> 的过程中，可以将吸出的 <strong>Input</strong> 再解交联纯化，测每个样品的 DNA 浓度，进行定量。</p><table><thead><tr><th align="center">DNA 浓度</th><th align="center">后面定量加入的染色质</th></tr></thead><tbody><tr><td align="center">100 ng/ul（ 最高浓度 ）</td><td align="center">100 ul</td></tr><tr><td align="center">50 ng/ul</td><td align="center">200 ul （ 相对最高浓度加的量 ）</td></tr></tbody></table></li></ol></li></ul></li><li><p><strong>抗体孵育</strong>（ <strong>一般晚上 十点 ~ 十一点左右做</strong> ）（ <strong>涉及 Beads 的都是磁力架操作</strong> ）</p><ul><li><strong>50 ul Beads</strong> + *<em>1 ml ChIP dilution &amp; wash buffer *</em> 洗涤三次</li><li><ol><li>第一次上下混匀 <strong>Beads</strong> 与 <strong>buffer</strong>，然后在<strong>磁力架</strong>上摇晃吸附 <strong>Beads **直至澄清，不离开</strong>磁力架**倒掉清液。</li><li>第二次加入 <strong>1 ml Buffer</strong>（ <strong>对着 Beads 对面壁加</strong> ）, 取下架子，混匀，放置在 <strong>4℃ 冰箱中的静音混合器</strong>上 <code>10 min</code> 洗涤。然后在<strong>磁力架</strong>上摇晃吸附 <strong>Beads **直至澄清，不离开</strong>磁力架**倒掉清液。</li><li>第三次加入 <strong>1 ml Buffer</strong>（ <strong>对着 Beads 对面壁加</strong> ）, 取下架子，混匀，放置在 <strong>4℃ 冰箱中的静音混合器</strong>上 <code>10 min</code> 洗涤。然后在<strong>磁力架</strong>上摇晃吸附 <strong>Beads **直至澄清，不离开</strong>磁力架**倒掉清液，吸掉残液、去掉气泡。</li><li>加 <strong>560 ul Buffer</strong>  + <strong>5 ul 抗体</strong>，仍在磁力架上先<strong>混匀抗体</strong>，然后再离开磁力架将 <strong>Beads</strong> 混匀，<strong>4℃ 冰箱中的静音混合器</strong> 过夜（ <strong><code>6 h</code></strong> ）。</li></ol></li></ul></li><li><p><strong>抗体与 Beads 洗涤</strong>（ <strong>涉及 Beads 的都是磁力架操作</strong> ）</p><ul><li><ol><li>孵育好的抗体同之前一样，用 <strong>1 ml ChIP dilution &amp; wash buffer</strong> 洗涤 <strong>四次</strong> （ <strong>这一步要保证洗涤干净</strong>），<strong>一快三慢</strong>。</li><li>倒掉上清液，加入 <strong>900ul ChIP dilution &amp; wash buffer</strong> + <strong>相对定量的体积的染色质（ 100ul ）</strong> ，摇匀，<strong>4℃ 冰箱中的静音混合器</strong> <strong><code>6 h</code></strong>。</li></ol></li></ul></li></ul><h3 id="5洗涤"><a href="#5洗涤" class="headerlink" title="5洗涤"></a>5洗涤</h3><ul><li><ol><li><p>孵育结束后，将离心管至于磁力架上，直接拿磁力架倒掉管中上清，用枪吸干残液、去掉气泡。</p></li><li><p>按顺序加入下列 <strong>washing Buffer</strong> 各 <strong>1 ml</strong>，分别洗涤两次，<strong>一快一慢</strong>。</p><ol><li><strong>快</strong>：颠倒离心管，将 <strong>Beads</strong> 完全重悬后即可放在磁力架上，弃上清</li><li><strong>慢</strong>：颠倒离心管，将 <strong>Beads</strong> 完全重悬后放在 <strong>4℃ 冰箱中的静音混合器</strong>上 <code>10 min</code>，然后再将其放置在磁力架上上下颠倒几次，弃上清，用枪吸干残液、去掉气泡</li></ol><table><thead><tr><th align="center">low salt wash buffer</th><th>一次快洗，一次慢洗 10 min</th></tr></thead><tbody><tr><td align="center"><strong>High salt wash buffer</strong></td><td><strong>一次快洗，一次慢洗 10 min</strong></td></tr><tr><td align="center"><strong>LiCl salt</strong></td><td><strong>一次快洗，一次慢洗 10 min</strong></td></tr><tr><td align="center"><strong>TE buffer</strong></td><td><strong>一次快洗，一次慢洗 10 min</strong></td></tr></tbody></table></li><li><p>最后一次 <strong>TE buffer</strong> 后，磁力架上完全吸干上清，去掉气泡。对着 <strong>Beads</strong> 加 <strong>250 ul Elution buffer</strong>，重悬混匀，<strong>65℃ 15 min</strong>，<strong>瞬离</strong>将盖子上液体离心下去，磁力架上吸上清于另一干净的 <strong>1.5 ml 管子中</strong>。</p></li><li><p>再对着 <strong>Beads</strong> 加 <strong>250 ul Elution buffer</strong>，重悬混匀，<strong>65℃ 15 min</strong>，<strong>瞬离</strong>将盖子上液体离心下去，磁力架上吸上清于<strong>上一步 3 ** 的 **1.5 ml 管子中</strong>。</p></li><li><p>在上面<strong>两次</strong>的<strong>上清混合液</strong>中加入 <strong>20 ul 5M NaCl</strong>，<strong>65℃ 解交联过夜（ 6h 以上）</strong></p></li></ol></li></ul><h3 id="6-纯化"><a href="#6-纯化" class="headerlink" title="6 纯化"></a>6 纯化</h3><ul><li>纯化</li><li><ol><li>在解交联产物中加入以下试剂，<strong>45℃ <code>1 h</code></strong> <ol><li><strong>10 ul 0.5M EDTA</strong></li><li><strong>20 ul 1M Tris-HCl PH <code>7.5</code></strong></li><li><strong>2 ul Protein K</strong></li><li><strong>5 ul RNAase</strong></li></ol></li><li>纯化 DNA ，步骤同前 <strong>3.3 — 3.4</strong>。</li><li>取出解交联染色质，加入等体积的 <strong>24:1 氯仿：异戊酸</strong> <strong>500 ul</strong>，手动混匀 <code>5 min</code>，然后 <strong>12000 rpm 20min</strong>。小心吸取上清 <strong>400 ul</strong> （ <strong>宁愿少吸点也不要吸到杂质</strong> ）左右至新的离心管中，加入 <strong>80 ul 3M NaAC</strong>、<strong>720 ul 预冷无水乙醇（ 一定要保证干净，尽量在这一步重新配置 ）</strong>、<strong>2 ul 肝糖原（ -20℃ 的 二抗盒子中，白色管子 ）</strong>，<strong>-80℃</strong> 沉淀 <strong><code>6 h</code></strong> （ <strong>推荐 -80 ℃，尽量多沉淀</strong> ） </li><li><strong>4℃ 12000 rpm</strong> <code>20 min</code>，弃上清（ <strong>倒扣纸面倒干净液体</strong> ），加入 <strong>1 ml 75% 乙醇 （  一定要保证干净，尽量在这一步重新配置）</strong>。<strong>4℃ 12000 rpm <code>20 min</code></strong> , 弃上清，再加入 <strong>1 ml 干净的无水乙醇 4℃ 12000 rpm <code>20 min</code> *<em>，弃上清，离心管至于超净台吹干 <code>15 min</code> （ *</em>白色沉淀变透明，即看不到即可</strong> ），加入 <strong>15 ul ddH<sub>2</sub>O（ 一定要干净 ）</strong> ，弹匀，使尽量覆盖分散在管壁。</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;Buffer-配置&quot;&gt;&lt;a href=&quot;#Buffer-配置&quot; class=&quot;headerlink&quot; title=&quot;Buffer 配置&quot;&gt;&lt;/a&gt;Buffer 配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Markdown 语法&lt;ul&gt;
&lt;li&gt;下标：
      
    
    </summary>
    
      <category term="实验" scheme="http://yoursite.com/categories/%E5%AE%9E%E9%AA%8C/"/>
    
    
      <category term="ChIP" scheme="http://yoursite.com/tags/ChIP/"/>
    
  </entry>
  
  <entry>
    <title>文献收集测试</title>
    <link href="http://yoursite.com/2019/07/18/Paper/"/>
    <id>http://yoursite.com/2019/07/18/Paper/</id>
    <published>2019-07-18T13:05:41.014Z</published>
    <updated>2019-07-18T14:03:53.377Z</updated>
    
    <content type="html"><![CDATA[<h3 id="胁迫、转座子与表观修饰"><a href="#胁迫、转座子与表观修饰" class="headerlink" title="胁迫、转座子与表观修饰"></a>胁迫、转座子与表观修饰</h3><ul><li><p><a href="https://www.biorxiv.org/content/10.1101/544627v1" target="_blank" rel="noopener">In planta chromatin immunoprecipitation in Zymoseptoria tritici reveals chromatin-based regulation of putative effector gene expression</a></p><blockquote><p>2019 BioRxiv 转座子与表观修饰：TE and H3K4me2、H3K27me3、H3K9me3</p></blockquote></li><li><p><a href="https://www.biorxiv.org/content/10.1101/633693v1" target="_blank" rel="noopener">Stress-driven transposable element de-repression dynamics in a fungal pathogen</a></p><blockquote><p>2019 BioRxiv 转座子表达与胁迫：MITE and LTR-<em>Gypsy</em> elements</p></blockquote></li><li><p><a href="https://www.biorxiv.org/content/10.1101/573915v1" target="_blank" rel="noopener">Low temperature triggers genome-wide hypermethylation of transposable elements and centromeres in maize</a></p><blockquote><p>2019 BioRxiv 玉米中低温诱导转座子 DNA 高甲基化</p></blockquote></li><li><p><a href="https://www.biorxiv.org/content/10.1101/475798v2" target="_blank" rel="noopener">Excess light priming in <em>Arabidopsis thaliana</em> with altered DNA methylomes</a></p><blockquote><p>2019 Biorxiv DNA甲基化组的维持受损，但对重复的过量光的光保护和引发是有效的</p></blockquote></li><li><p><a href="https://onlinelibrary.wiley.com/doi/full/10.1111/tpj.14098" target="_blank" rel="noopener">Immune receptor genes and pericentromeric transposons as targets of common epigenetic regulatory elements</a></p><blockquote><p>2018 <a href="https://www.x-mol.com/paper/0/1036" target="_blank" rel="noopener"><em>Plant Journal</em></a>  拟南芥：sRNAs 可以控制 PRR / NLR 基因和远端的 pericentromeric TEs，并在它们被激活时优先使 TEs 沉默<img src="https://onlinelibrary.wiley.com/cms/attachment/f69a7073-b95a-45e5-af47-d494bd857409/tpj14098-fig-0006-m.jpg" alt> </p></blockquote></li></ul><h3 id="DNA甲基化"><a href="#DNA甲基化" class="headerlink" title="DNA甲基化"></a>DNA甲基化</h3><ul><li><p><a href="https://www.biorxiv.org/content/10.1101/623843v1" target="_blank" rel="noopener">The Catalytic Core of DEMETER Guides Active DNA Demethylation in Arabidopsis</a> </p><blockquote><p>2019 Biorxiv 拟南芥：DME<img src="https://raw.githubusercontent.com/qliugithub/PicGo/master/2019-BioRxiv-%E6%8B%9F%E5%8D%97%E8%8A%A5DME.jpg" alt></p></blockquote></li><li><p><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6126732/" target="_blank" rel="noopener">Seed genome hypomethylated regions are enriched in transcription factor genes</a></p><blockquote><p>2018 PNAS DNA甲基化低的区域有转录因子的富集： hypomethylated regions, or DNA methylation valleys (DMVs)<img src="https://raw.githubusercontent.com/qliugithub/PicGo/master/DMV" alt></p></blockquote></li></ul><h3 id="DNA-甲基化、组蛋白（去）乙酰化、转座子、转录因子"><a href="#DNA-甲基化、组蛋白（去）乙酰化、转座子、转录因子" class="headerlink" title="DNA 甲基化、组蛋白（去）乙酰化、转座子、转录因子"></a>DNA 甲基化、组蛋白（去）乙酰化、转座子、转录因子</h3><ul><li><p><a href="https://www.biorxiv.org/content/10.1101/670307v1" target="_blank" rel="noopener">Distinct Contribution of DNA Methylation and Histone Acetylation to the Genomic Occupancy of Transcription Factors</a></p><blockquote><p>人：2019 BioRxiv 在 DNA 甲基化缺失的细胞中 HDAC 的抑制效果显著增加，DNA甲基化和组蛋白去乙酰化在很大程度上独立地抑制转录因子结合和基因表达<img src="https://github.com/qliugithub/PicGo/blob/master/DNA%E7%94%B2%E5%9F%BA%E5%8C%96%E5%92%8C%E5%8E%BB%E4%B9%99%E9%85%B0%E5%8C%96_%E8%BD%AC%E5%BA%A7%E5%AD%90_%E8%BD%AC%E5%BD%95%E5%9B%A0%E5%AD%90.jpg" alt></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;胁迫、转座子与表观修饰&quot;&gt;&lt;a href=&quot;#胁迫、转座子与表观修饰&quot; class=&quot;headerlink&quot; title=&quot;胁迫、转座子与表观修饰&quot;&gt;&lt;/a&gt;胁迫、转座子与表观修饰&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.bior
      
    
    </summary>
    
      <category term="文章" scheme="http://yoursite.com/categories/%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="组蛋白" scheme="http://yoursite.com/tags/%E7%BB%84%E8%9B%8B%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/07/18/hello-world/"/>
    <id>http://yoursite.com/2019/07/18/hello-world/</id>
    <published>2019-07-18T11:37:29.656Z</published>
    <updated>2019-07-18T14:02:43.770Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
